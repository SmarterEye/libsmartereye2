<?xml version="1.0" encoding="UTF-8" standalone="no"?><svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" contentScriptType="application/ecmascript" contentStyleType="text/css" height="1802.5px" preserveAspectRatio="none" style="width:9328px;height:1802px;" version="1.1" viewBox="0 0 9328 1802" width="9328.75px" zoomAndPan="magnify"><defs><filter height="300%" id="ftkelr2lftzvn" width="300%" x="-1" y="-1"><feGaussianBlur result="blurOut" stdDeviation="2.5"/><feColorMatrix in="blurOut" result="blurOut2" type="matrix" values="0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 .4 0"/><feOffset dx="5.0" dy="5.0" in="blurOut2" result="blurOut3"/><feBlend in="SourceGraphic" in2="blurOut3" mode="normal"/></filter></defs><g><!--MD5=[c3af6746ddb586f62e2694ccdbee2e40]
class DevicesChangedCallback--><rect fill="#FEFECE" filter="url(#ftkelr2lftzvn)" height="148.5864" id="DevicesChangedCallback" style="stroke: #A80036; stroke-width: 1.875;" width="501.25" x="28.125" y="283.75"/><ellipse cx="182.8125" cy="310.4858" fill="#B4A7E5" rx="13.75" ry="13.75" style="stroke: #A80036; stroke-width: 1.25;"/><path d="M178.9063,305.4858 L178.9063,303.3765 L186.3281,303.3765 L186.3281,305.4858 L183.9844,305.4858 Q183.7891,305.4858 183.7305,305.5249 Q183.6719,305.564 183.6719,305.6226 L183.6719,315.7397 Q183.6719,315.7983 183.7305,315.8374 Q183.7891,315.8765 183.9844,315.8765 L186.3281,315.8765 L186.3281,317.9858 L178.9063,317.9858 L178.9063,315.8765 L181.25,315.8765 Q181.5039,315.8765 181.5234,315.8569 Q181.5625,315.8374 181.5625,315.7397 L181.5625,305.6226 Q181.5625,305.5249 181.5234,305.5054 Q181.5039,305.4858 181.25,305.4858 L178.9063,305.4858 Z "/><text fill="#000000" font-family="sans-serif" font-size="15" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="26.25" x="285.9375" y="307.1899">«T»</text><text fill="#000000" font-family="sans-serif" font-size="15" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="181.25" x="208.4375" y="327.6758">DevicesChangedCallback</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="29.375" x2="528.125" y1="337.2217" y2="337.2217"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="71.25" x="35.625" y="357.9791">T callback_;</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="29.375" x2="528.125" y1="366.0004" y2="366.0004"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="271.25" x="35.625" y="386.7578">explicit DevicesChangedCallback(T callback);</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="486.25" x="35.625" y="405.5365">void onDevicesChanged(SeDeviceList *removed, SeDeviceList *added) override;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="141.25" x="35.625" y="424.3152">void release() override;</text><!--MD5=[6754354365917abf8f1a56af1b7e344c]
class Context--><rect fill="#FEFECE" filter="url(#ftkelr2lftzvn)" height="266.5656" id="Context" style="stroke: #A80036; stroke-width: 1.875;" width="348.75" x="573.125" y="225"/><ellipse cx="716.5625" cy="245" fill="#ADD1B2" rx="13.75" ry="13.75" style="stroke: #A80036; stroke-width: 1.25;"/><path d="M716.1719,252.5 Q713.75,252.5 712.3438,250.7227 Q710.9375,248.9258 710.9375,245.2344 Q710.9375,242.1094 712.4219,240 Q713.9063,237.8906 716.4844,237.8906 Q717.0508,237.8906 717.5977,237.8906 Q718.1445,237.8906 718.5352,237.8906 Q718.8477,237.8906 719.043,237.8906 Q719.2578,237.8906 719.7656,237.8906 L720.6445,242.5 L719.3164,242.5 Q718.7695,241.1328 718.0469,240.5664 Q717.3438,240 716.1914,240 Q714.7461,240 713.8867,241.4844 Q713.0469,242.9492 713.0469,245.2344 Q713.0469,247.7539 713.6914,249.082 Q714.3555,250.3906 716.1133,250.3906 Q717.2656,250.3906 718.0664,249.6875 Q718.8867,248.9648 719.3164,247.2266 L720.6055,247.8711 Q720.1172,250.0586 718.9453,251.2891 Q717.7734,252.5 716.1719,252.5 Z "/><text fill="#000000" font-family="sans-serif" font-size="15" lengthAdjust="spacingAndGlyphs" textLength="51.25" x="742.1875" y="251.947">Context</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="574.375" x2="920.625" y1="265" y2="265"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="230" x="580.625" y="285.7574">std::shared_ptr&lt;SeContext&gt; context_;</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="574.375" x2="920.625" y1="293.7787" y2="293.7787"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="60" x="580.625" y="314.5361">Context();</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="323.75" x="580.625" y="333.3148">explicit Context(std::shared_ptr&lt;SeContext&gt; context);</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="321.25" x="580.625" y="352.0935">explicit operator std::shared_ptr&lt;SeContext&gt;() const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="0" x="584.375" y="370.8722"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="201.25" x="580.625" y="389.6509">DeviceList queryDevices() const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="250" x="580.625" y="408.4296">DeviceList queryDevices(int mask) const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="280" x="580.625" y="427.2083">std::vector&lt;Sensor&gt; queryAllSensors() const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="333.75" x="580.625" y="445.9869">Device getSensorParent(const Sensor &amp;sensor) const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="0" x="584.375" y="464.7656"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="273.75" x="580.625" y="483.5443">void setDevicesCahngedCallback(T callback);</text><!--MD5=[d74c84e6b903f5e9ba2c700cd75aa0be]
class DeviceHub--><rect fill="#FEFECE" filter="url(#ftkelr2lftzvn)" height="172.6721" id="DeviceHub" style="stroke: #A80036; stroke-width: 1.875;" width="553.75" x="965.625" y="271.875"/><ellipse cx="1199.6875" cy="291.875" fill="#ADD1B2" rx="13.75" ry="13.75" style="stroke: #A80036; stroke-width: 1.25;"/><path d="M1199.2969,299.375 Q1196.875,299.375 1195.4688,297.5977 Q1194.0625,295.8008 1194.0625,292.1094 Q1194.0625,288.9844 1195.5469,286.875 Q1197.0313,284.7656 1199.6094,284.7656 Q1200.1758,284.7656 1200.7227,284.7656 Q1201.2695,284.7656 1201.6602,284.7656 Q1201.9727,284.7656 1202.168,284.7656 Q1202.3828,284.7656 1202.8906,284.7656 L1203.7695,289.375 L1202.4414,289.375 Q1201.8945,288.0078 1201.1719,287.4414 Q1200.4688,286.875 1199.3164,286.875 Q1197.8711,286.875 1197.0117,288.3594 Q1196.1719,289.8242 1196.1719,292.1094 Q1196.1719,294.6289 1196.8164,295.957 Q1197.4805,297.2656 1199.2383,297.2656 Q1200.3906,297.2656 1201.1914,296.5625 Q1202.0117,295.8398 1202.4414,294.1016 L1203.7305,294.7461 Q1203.2422,296.9336 1202.0703,298.1641 Q1200.8984,299.375 1199.2969,299.375 Z "/><text fill="#000000" font-family="sans-serif" font-size="15" lengthAdjust="spacingAndGlyphs" textLength="75" x="1225.3125" y="298.822">DeviceHub</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="966.875" x2="1518.125" y1="311.875" y2="311.875"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="273.75" x="973.125" y="332.6324">std::shared_ptr&lt;SeDeviceHub&gt; device_hub_;</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="966.875" x2="1518.125" y1="340.6537" y2="340.6537"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="265" x="973.125" y="361.4111">explicit DeviceHub(const Context &amp;context);</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="441.25" x="973.125" y="380.1898">explicit operator std::shared_ptr&lt;SeDeviceHub&gt;() { return device_hub_; }</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="538.75" x="973.125" y="398.9685">explicit DeviceHub(std::shared_ptr&lt;SeDeviceHub&gt; hub) : device_hub_(std::move(hub)) {}</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="183.75" x="973.125" y="417.7472">Device waitForDevice() const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="268.75" x="973.125" y="436.5259">bool isConnected(const Device &amp;dev) const;</text><!--MD5=[4b5fea7e6bd7f03f6b22c98a3a6deaa7]
class Playback--><rect fill="#FEFECE" filter="url(#ftkelr2lftzvn)" height="341.6803" id="Playback" style="stroke: #A80036; stroke-width: 1.875;" width="318.75" x="6159.375" y="811.25"/><ellipse cx="6282.8125" cy="831.25" fill="#ADD1B2" rx="13.75" ry="13.75" style="stroke: #A80036; stroke-width: 1.25;"/><path d="M6282.4219,838.75 Q6280,838.75 6278.5938,836.9727 Q6277.1875,835.1758 6277.1875,831.4844 Q6277.1875,828.3594 6278.6719,826.25 Q6280.1563,824.1406 6282.7344,824.1406 Q6283.3008,824.1406 6283.8477,824.1406 Q6284.3945,824.1406 6284.7852,824.1406 Q6285.0977,824.1406 6285.293,824.1406 Q6285.5078,824.1406 6286.0156,824.1406 L6286.8945,828.75 L6285.5664,828.75 Q6285.0195,827.3828 6284.2969,826.8164 Q6283.5938,826.25 6282.4414,826.25 Q6280.9961,826.25 6280.1367,827.7344 Q6279.2969,829.1992 6279.2969,831.4844 Q6279.2969,834.0039 6279.9414,835.332 Q6280.6055,836.6406 6282.3633,836.6406 Q6283.5156,836.6406 6284.3164,835.9375 Q6285.1367,835.2148 6285.5664,833.4766 L6286.8555,834.1211 Q6286.3672,836.3086 6285.1953,837.5391 Q6284.0234,838.75 6282.4219,838.75 Z "/><text fill="#000000" font-family="sans-serif" font-size="15" lengthAdjust="spacingAndGlyphs" textLength="61.25" x="6308.4375" y="838.197">Playback</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="6160.625" x2="6476.875" y1="851.25" y2="851.25"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="92.5" x="6166.875" y="872.0074">std::string file_;</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="6160.625" x2="6476.875" y1="880.0287" y2="880.0287"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="207.5" x="6166.875" y="900.7861">explicit Playback(Device device) {}</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="80" x="6166.875" y="919.5648">void pause();</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="87.5" x="6166.875" y="938.3435">void resume();</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="68.75" x="6166.875" y="957.1222">void stop();</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="71.25" x="6166.875" y="975.9009">void seek();</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="166.25" x="6166.875" y="994.6796">std::string fileName() const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="148.75" x="6166.875" y="1013.4583">uint64_t position() const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="262.5" x="6166.875" y="1032.2369">std::chrono::nanoseconds duration() const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="143.75" x="6166.875" y="1051.0156">bool isRealTime() const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="215" x="6166.875" y="1069.7943">void setRealTime(bool is_real_time);</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="221.25" x="6166.875" y="1088.573">void setPlaybackSpeed(float speed);</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="203.75" x="6166.875" y="1107.3517">void setStatusChangedCallback();</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="230" x="6166.875" y="1126.1304">PlaybackStatus currentStatus() const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="303.75" x="6166.875" y="1144.9091">explicit Playback(std::shared_ptr&lt;SeDevice&gt; dev);</text><!--MD5=[da7fc25461f009319ada69721cf8c2d1]
class Recorder--><rect fill="#FEFECE" filter="url(#ftkelr2lftzvn)" height="116.3361" id="Recorder" style="stroke: #A80036; stroke-width: 1.875;" width="333.75" x="6521.875" y="923.75"/><ellipse cx="6651.5625" cy="943.75" fill="#ADD1B2" rx="13.75" ry="13.75" style="stroke: #A80036; stroke-width: 1.25;"/><path d="M6651.1719,951.25 Q6648.75,951.25 6647.3438,949.4727 Q6645.9375,947.6758 6645.9375,943.9844 Q6645.9375,940.8594 6647.4219,938.75 Q6648.9063,936.6406 6651.4844,936.6406 Q6652.0508,936.6406 6652.5977,936.6406 Q6653.1445,936.6406 6653.5352,936.6406 Q6653.8477,936.6406 6654.043,936.6406 Q6654.2578,936.6406 6654.7656,936.6406 L6655.6445,941.25 L6654.3164,941.25 Q6653.7695,939.8828 6653.0469,939.3164 Q6652.3438,938.75 6651.1914,938.75 Q6649.7461,938.75 6648.8867,940.2344 Q6648.0469,941.6992 6648.0469,943.9844 Q6648.0469,946.5039 6648.6914,947.832 Q6649.3555,949.1406 6651.1133,949.1406 Q6652.2656,949.1406 6653.0664,948.4375 Q6653.8867,947.7148 6654.3164,945.9766 L6655.6055,946.6211 Q6655.1172,948.8086 6653.9453,950.0391 Q6652.7734,951.25 6651.1719,951.25 Z "/><text fill="#000000" font-family="sans-serif" font-size="15" lengthAdjust="spacingAndGlyphs" textLength="63.75" x="6677.1875" y="950.697">Recorder</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="6523.125" x2="6854.375" y1="963.75" y2="963.75"/><line style="stroke: #A80036; stroke-width: 1.875;" x1="6523.125" x2="6854.375" y1="973.75" y2="973.75"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="246.25" x="6529.375" y="994.5074">explicit Recorder(const Device&amp; device);</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="318.75" x="6529.375" y="1013.2861">Recorder(const std::string &amp;file, const Device&amp; dev);</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="302.5" x="6529.375" y="1032.0648">explicit Recorder(std::shared_ptr&lt;SeDevice&gt; dev)</text><!--MD5=[fc539fa3f3b7db9b31467e896d367b3b]
class Device--><rect fill="#FEFECE" filter="url(#ftkelr2lftzvn)" height="379.2377" id="Device" style="stroke: #A80036; stroke-width: 1.875;" width="332.5" x="6523.75" y="168.75"/><ellipse cx="6661.5625" cy="188.75" fill="#ADD1B2" rx="13.75" ry="13.75" style="stroke: #A80036; stroke-width: 1.25;"/><path d="M6661.1719,196.25 Q6658.75,196.25 6657.3438,194.4727 Q6655.9375,192.6758 6655.9375,188.9844 Q6655.9375,185.8594 6657.4219,183.75 Q6658.9063,181.6406 6661.4844,181.6406 Q6662.0508,181.6406 6662.5977,181.6406 Q6663.1445,181.6406 6663.5352,181.6406 Q6663.8477,181.6406 6664.043,181.6406 Q6664.2578,181.6406 6664.7656,181.6406 L6665.6445,186.25 L6664.3164,186.25 Q6663.7695,184.8828 6663.0469,184.3164 Q6662.3438,183.75 6661.1914,183.75 Q6659.7461,183.75 6658.8867,185.2344 Q6658.0469,186.6992 6658.0469,188.9844 Q6658.0469,191.5039 6658.6914,192.832 Q6659.3555,194.1406 6661.1133,194.1406 Q6662.2656,194.1406 6663.0664,193.4375 Q6663.8867,192.7148 6664.3164,190.9766 L6665.6055,191.6211 Q6665.1172,193.8086 6663.9453,195.0391 Q6662.7734,196.25 6661.1719,196.25 Z "/><text fill="#000000" font-family="sans-serif" font-size="15" lengthAdjust="spacingAndGlyphs" textLength="46.25" x="6687.1875" y="195.697">Device</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="6525" x2="6855" y1="208.75" y2="208.75"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="220" x="6531.25" y="229.5074">std::shared_ptr&lt;SeDevice&gt; device_;</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="6525" x2="6855" y1="237.5287" y2="237.5287"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="55" x="6531.25" y="258.2861">Device();</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="291.25" x="6531.25" y="277.0648">explicit Device(std::shared_ptr&lt;SeDevice&gt; dev);</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="0" x="6535" y="295.8435"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="316.25" x="6531.25" y="314.6222">explicit operator std::shared_ptr&lt;SeDevice&gt;() const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="176.25" x="6531.25" y="333.4009">explicit operator bool() const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="317.5" x="6531.25" y="352.1796">Device &amp;operator=(std::shared_ptr&lt;SeDevice&gt; dev);</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="240" x="6531.25" y="370.9583">Device &amp;operator=(const Device &amp;dev);</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="0" x="6535" y="389.7369"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="265" x="6531.25" y="408.5156">std::vector&lt;Sensor&gt; querySensors() const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="228.75" x="6531.25" y="427.2943">bool supports(CameraInfo info) const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="251.25" x="6531.25" y="446.073">std::string getInfo(CameraInfo info) const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="137.5" x="6531.25" y="464.8517">void hardwareReset();</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="86.25" x="6531.25" y="483.6304">T first() const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="90" x="6531.25" y="502.4091">bool is() const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="77.5" x="6531.25" y="521.1877">T as() const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="285" x="6531.25" y="539.9664">const std::shared_ptr&lt;SeDevice&gt; &amp;get() const;</text><!--MD5=[12a123434dec7f8e69c7f6ad4f3aad91]
class device_list_iterator--><!--MD5=[a0f87e52f148da0a84eea03fbd30a714]
class DeviceList--><rect fill="#FEFECE" filter="url(#ftkelr2lftzvn)" height="322.9016" id="DeviceList" style="stroke: #A80036; stroke-width: 1.875;" width="368.75" x="5644.375" y="196.875"/><ellipse cx="5787.8125" cy="216.875" fill="#ADD1B2" rx="13.75" ry="13.75" style="stroke: #A80036; stroke-width: 1.25;"/><path d="M5787.4219,224.375 Q5785,224.375 5783.5938,222.5977 Q5782.1875,220.8008 5782.1875,217.1094 Q5782.1875,213.9844 5783.6719,211.875 Q5785.1563,209.7656 5787.7344,209.7656 Q5788.3008,209.7656 5788.8477,209.7656 Q5789.3945,209.7656 5789.7852,209.7656 Q5790.0977,209.7656 5790.293,209.7656 Q5790.5078,209.7656 5791.0156,209.7656 L5791.8945,214.375 L5790.5664,214.375 Q5790.0195,213.0078 5789.2969,212.4414 Q5788.5938,211.875 5787.4414,211.875 Q5785.9961,211.875 5785.1367,213.3594 Q5784.2969,214.8242 5784.2969,217.1094 Q5784.2969,219.6289 5784.9414,220.957 Q5785.6055,222.2656 5787.3633,222.2656 Q5788.5156,222.2656 5789.3164,221.5625 Q5790.1367,220.8398 5790.5664,219.1016 L5791.8555,219.7461 Q5791.3672,221.9336 5790.1953,223.1641 Q5789.0234,224.375 5787.4219,224.375 Z "/><text fill="#000000" font-family="sans-serif" font-size="15" lengthAdjust="spacingAndGlyphs" textLength="71.25" x="5813.4375" y="223.822">DeviceList</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="5645.625" x2="6011.875" y1="236.875" y2="236.875"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="217.5" x="5651.875" y="257.6324">std::shared_ptr&lt;SeDeviceList&gt; list_;</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="5645.625" x2="6011.875" y1="265.6537" y2="265.6537"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="327.5" x="5651.875" y="286.4111">explicit DeviceList(std::shared_ptr&lt;SeDeviceList&gt; list);</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="76.25" x="5651.875" y="305.1898">DeviceList();</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="272.5" x="5651.875" y="323.9685">explicit operator std::vector&lt;Device&gt;() const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="353.75" x="5651.875" y="342.7472">DeviceList &amp;operator=(std::shared_ptr&lt;SeDeviceList&gt; list);</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="238.75" x="5651.875" y="361.5259">Device operator[](uint32_t index) const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="245" x="5651.875" y="380.3046">bool contains(const Device &amp;dev) const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="120" x="5651.875" y="399.0833">int32_t size() const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="125" x="5651.875" y="417.8619">Device front() const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="125" x="5651.875" y="436.6406">Device back() const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="300" x="5651.875" y="455.4193">explicit operator std::shared_ptr&lt;SeDeviceList&gt;();</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="201.25" x="5651.875" y="474.198">device_list_iterator begin() const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="191.25" x="5651.875" y="492.9767">device_list_iterator end() const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="216.25" x="5651.875" y="511.7554">const SeDeviceList *getList() const;</text><!--MD5=[678ba86161b65c93147b2a3a8cf02be2]
class Frame--><rect fill="#FEFECE" filter="url(#ftkelr2lftzvn)" height="40" id="Frame" style="stroke: #A80036; stroke-width: 1.875;" width="85" x="2931.25" y="338.125"/><ellipse cx="2950" cy="358.125" fill="#ADD1B2" rx="13.75" ry="13.75" style="stroke: #A80036; stroke-width: 1.25;"/><path d="M2949.6094,365.625 Q2947.1875,365.625 2945.7813,363.8477 Q2944.375,362.0508 2944.375,358.3594 Q2944.375,355.2344 2945.8594,353.125 Q2947.3438,351.0156 2949.9219,351.0156 Q2950.4883,351.0156 2951.0352,351.0156 Q2951.582,351.0156 2951.9727,351.0156 Q2952.2852,351.0156 2952.4805,351.0156 Q2952.6953,351.0156 2953.2031,351.0156 L2954.082,355.625 L2952.7539,355.625 Q2952.207,354.2578 2951.4844,353.6914 Q2950.7813,353.125 2949.6289,353.125 Q2948.1836,353.125 2947.3242,354.6094 Q2946.4844,356.0742 2946.4844,358.3594 Q2946.4844,360.8789 2947.1289,362.207 Q2947.793,363.5156 2949.5508,363.5156 Q2950.7031,363.5156 2951.5039,362.8125 Q2952.3242,362.0898 2952.7539,360.3516 L2954.043,360.9961 Q2953.5547,363.1836 2952.3828,364.4141 Q2951.2109,365.625 2949.6094,365.625 Z "/><text fill="#000000" font-family="sans-serif" font-size="15" lengthAdjust="spacingAndGlyphs" textLength="45" x="2967.5" y="365.072">Frame</text><!--MD5=[df850ca408df098937106be773173e95]
class VideoFrame--><rect fill="#FEFECE" filter="url(#ftkelr2lftzvn)" height="172.6721" id="VideoFrame" style="stroke: #A80036; stroke-width: 1.875;" width="268.75" x="2040.625" y="895.625"/><ellipse cx="2127.8125" cy="915.625" fill="#ADD1B2" rx="13.75" ry="13.75" style="stroke: #A80036; stroke-width: 1.25;"/><path d="M2127.4219,923.125 Q2125,923.125 2123.5938,921.3477 Q2122.1875,919.5508 2122.1875,915.8594 Q2122.1875,912.7344 2123.6719,910.625 Q2125.1563,908.5156 2127.7344,908.5156 Q2128.3008,908.5156 2128.8477,908.5156 Q2129.3945,908.5156 2129.7852,908.5156 Q2130.0977,908.5156 2130.293,908.5156 Q2130.5078,908.5156 2131.0156,908.5156 L2131.8945,913.125 L2130.5664,913.125 Q2130.0195,911.7578 2129.2969,911.1914 Q2128.5938,910.625 2127.4414,910.625 Q2125.9961,910.625 2125.1367,912.1094 Q2124.2969,913.5742 2124.2969,915.8594 Q2124.2969,918.3789 2124.9414,919.707 Q2125.6055,921.0156 2127.3633,921.0156 Q2128.5156,921.0156 2129.3164,920.3125 Q2130.1367,919.5898 2130.5664,917.8516 L2131.8555,918.4961 Q2131.3672,920.6836 2130.1953,921.9141 Q2129.0234,923.125 2127.4219,923.125 Z "/><text fill="#000000" font-family="sans-serif" font-size="15" lengthAdjust="spacingAndGlyphs" textLength="83.75" x="2153.4375" y="922.572">VideoFrame</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="2041.875" x2="2308.125" y1="935.625" y2="935.625"/><line style="stroke: #A80036; stroke-width: 1.875;" x1="2041.875" x2="2308.125" y1="945.625" y2="945.625"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="253.75" x="2048.125" y="966.3824">explicit VideoFrame(const Frame &amp;frame);</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="102.5" x="2048.125" y="985.1611">int width() const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="105" x="2048.125" y="1003.9398">int height() const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="147.5" x="2048.125" y="1022.7185">int strideInBytes() const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="137.5" x="2048.125" y="1041.4972">int bitsPerPixel() const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="150" x="2048.125" y="1060.2759">int bytesPerPixel() const;</text><!--MD5=[d888699cc05acf61cf9ef1e4eeb281ec]
class Points--><rect fill="#FEFECE" filter="url(#ftkelr2lftzvn)" height="191.4508" id="Points" style="stroke: #A80036; stroke-width: 1.875;" width="440" x="2353.75" y="886.25"/><ellipse cx="2546.5625" cy="906.25" fill="#ADD1B2" rx="13.75" ry="13.75" style="stroke: #A80036; stroke-width: 1.25;"/><path d="M2546.1719,913.75 Q2543.75,913.75 2542.3438,911.9727 Q2540.9375,910.1758 2540.9375,906.4844 Q2540.9375,903.3594 2542.4219,901.25 Q2543.9063,899.1406 2546.4844,899.1406 Q2547.0508,899.1406 2547.5977,899.1406 Q2548.1445,899.1406 2548.5352,899.1406 Q2548.8477,899.1406 2549.043,899.1406 Q2549.2578,899.1406 2549.7656,899.1406 L2550.6445,903.75 L2549.3164,903.75 Q2548.7695,902.3828 2548.0469,901.8164 Q2547.3438,901.25 2546.1914,901.25 Q2544.7461,901.25 2543.8867,902.7344 Q2543.0469,904.1992 2543.0469,906.4844 Q2543.0469,909.0039 2543.6914,910.332 Q2544.3555,911.6406 2546.1133,911.6406 Q2547.2656,911.6406 2548.0664,910.9375 Q2548.8867,910.2148 2549.3164,908.4766 L2550.6055,909.1211 Q2550.1172,911.3086 2548.9453,912.5391 Q2547.7734,913.75 2546.1719,913.75 Z "/><text fill="#000000" font-family="sans-serif" font-size="15" lengthAdjust="spacingAndGlyphs" textLength="43.75" x="2572.1875" y="913.197">Points</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="2355" x2="2792.5" y1="926.25" y2="926.25"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="76.25" x="2361.25" y="947.0074">size_t size_;</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="2355" x2="2792.5" y1="955.0287" y2="955.0287"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="95" x="2361.25" y="975.7861">explicit Points();</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="217.5" x="2361.25" y="994.5648">explicit Points(const Frame &amp;frame);</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="187.5" x="2361.25" y="1013.3435">const Vertex *vertices() const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="316.25" x="2361.25" y="1032.1222">const TextureCoordinate *textureCoordinate() const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="425" x="2361.25" y="1050.9009">void exportToPly(const std::string &amp;fnmae, VideoFrame texture) const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="120" x="2361.25" y="1069.6796">size_t size() consta</text><!--MD5=[50469d02b481d773454c9d959f9efcb0]
class DepthFrame--><rect fill="#FEFECE" filter="url(#ftkelr2lftzvn)" height="60" id="DepthFrame" style="stroke: #A80036; stroke-width: 1.875;" width="126.25" x="2111.875" y="1415.625"/><ellipse cx="2130.625" cy="1435.625" fill="#ADD1B2" rx="13.75" ry="13.75" style="stroke: #A80036; stroke-width: 1.25;"/><path d="M2130.2344,1443.125 Q2127.8125,1443.125 2126.4063,1441.3477 Q2125,1439.5508 2125,1435.8594 Q2125,1432.7344 2126.4844,1430.625 Q2127.9688,1428.5156 2130.5469,1428.5156 Q2131.1133,1428.5156 2131.6602,1428.5156 Q2132.207,1428.5156 2132.5977,1428.5156 Q2132.9102,1428.5156 2133.1055,1428.5156 Q2133.3203,1428.5156 2133.8281,1428.5156 L2134.707,1433.125 L2133.3789,1433.125 Q2132.832,1431.7578 2132.1094,1431.1914 Q2131.4063,1430.625 2130.2539,1430.625 Q2128.8086,1430.625 2127.9492,1432.1094 Q2127.1094,1433.5742 2127.1094,1435.8594 Q2127.1094,1438.3789 2127.7539,1439.707 Q2128.418,1441.0156 2130.1758,1441.0156 Q2131.3281,1441.0156 2132.1289,1440.3125 Q2132.9492,1439.5898 2133.3789,1437.8516 L2134.668,1438.4961 Q2134.1797,1440.6836 2133.0078,1441.9141 Q2131.8359,1443.125 2130.2344,1443.125 Z "/><text fill="#000000" font-family="sans-serif" font-size="15" lengthAdjust="spacingAndGlyphs" textLength="86.25" x="2148.125" y="1442.572">DepthFrame</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="2113.125" x2="2236.875" y1="1455.625" y2="1455.625"/><line style="stroke: #A80036; stroke-width: 1.875;" x1="2113.125" x2="2236.875" y1="1465.625" y2="1465.625"/><!--MD5=[a3f954ca223d1724b874d90022ca8cb3]
class DisparityFrame--><rect fill="#FEFECE" filter="url(#ftkelr2lftzvn)" height="153.8934" id="DisparityFrame" style="stroke: #A80036; stroke-width: 1.875;" width="286.25" x="2031.875" y="1635"/><ellipse cx="2117.1875" cy="1655" fill="#ADD1B2" rx="13.75" ry="13.75" style="stroke: #A80036; stroke-width: 1.25;"/><path d="M2116.7969,1662.5 Q2114.375,1662.5 2112.9688,1660.7227 Q2111.5625,1658.9258 2111.5625,1655.2344 Q2111.5625,1652.1094 2113.0469,1650 Q2114.5313,1647.8906 2117.1094,1647.8906 Q2117.6758,1647.8906 2118.2227,1647.8906 Q2118.7695,1647.8906 2119.1602,1647.8906 Q2119.4727,1647.8906 2119.668,1647.8906 Q2119.8828,1647.8906 2120.3906,1647.8906 L2121.2695,1652.5 L2119.9414,1652.5 Q2119.3945,1651.1328 2118.6719,1650.5664 Q2117.9688,1650 2116.8164,1650 Q2115.3711,1650 2114.5117,1651.4844 Q2113.6719,1652.9492 2113.6719,1655.2344 Q2113.6719,1657.7539 2114.3164,1659.082 Q2114.9805,1660.3906 2116.7383,1660.3906 Q2117.8906,1660.3906 2118.6914,1659.6875 Q2119.5117,1658.9648 2119.9414,1657.2266 L2121.2305,1657.8711 Q2120.7422,1660.0586 2119.5703,1661.2891 Q2118.3984,1662.5 2116.7969,1662.5 Z "/><text fill="#000000" font-family="sans-serif" font-size="15" lengthAdjust="spacingAndGlyphs" textLength="105" x="2142.8125" y="1661.947">DisparityFrame</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="2033.125" x2="2316.875" y1="1675" y2="1675"/><line style="stroke: #A80036; stroke-width: 1.875;" x1="2033.125" x2="2316.875" y1="1685" y2="1685"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="253.75" x="2039.375" y="1705.7574">explicit DepthFrame(const Frame &amp;frame);</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="190" x="2039.375" y="1724.5361">float distance(int x, int y) const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="110" x="2039.375" y="1743.3148">float units() const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="271.25" x="2039.375" y="1762.0935">explicit DisparityFrame(const Frame &amp;frame);</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="131.25" x="2039.375" y="1780.8722">float baseline() const;</text><!--MD5=[ec389b59aaeba38bd69c3e56311fe2f1]
class MotionFrame--><rect fill="#FEFECE" filter="url(#ftkelr2lftzvn)" height="97.5574" id="MotionFrame" style="stroke: #A80036; stroke-width: 1.875;" width="272.5" x="2837.5" y="933.125"/><ellipse cx="2923.4375" cy="953.125" fill="#ADD1B2" rx="13.75" ry="13.75" style="stroke: #A80036; stroke-width: 1.25;"/><path d="M2923.0469,960.625 Q2920.625,960.625 2919.2188,958.8477 Q2917.8125,957.0508 2917.8125,953.3594 Q2917.8125,950.2344 2919.2969,948.125 Q2920.7813,946.0156 2923.3594,946.0156 Q2923.9258,946.0156 2924.4727,946.0156 Q2925.0195,946.0156 2925.4102,946.0156 Q2925.7227,946.0156 2925.918,946.0156 Q2926.1328,946.0156 2926.6406,946.0156 L2927.5195,950.625 L2926.1914,950.625 Q2925.6445,949.2578 2924.9219,948.6914 Q2924.2188,948.125 2923.0664,948.125 Q2921.6211,948.125 2920.7617,949.6094 Q2919.9219,951.0742 2919.9219,953.3594 Q2919.9219,955.8789 2920.5664,957.207 Q2921.2305,958.5156 2922.9883,958.5156 Q2924.1406,958.5156 2924.9414,957.8125 Q2925.7617,957.0898 2926.1914,955.3516 L2927.4805,955.9961 Q2926.9922,958.1836 2925.8203,959.4141 Q2924.6484,960.625 2923.0469,960.625 Z "/><text fill="#000000" font-family="sans-serif" font-size="15" lengthAdjust="spacingAndGlyphs" textLength="90" x="2949.0625" y="960.072">MotionFrame</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="2838.75" x2="3108.75" y1="973.125" y2="973.125"/><line style="stroke: #A80036; stroke-width: 1.875;" x1="2838.75" x2="3108.75" y1="983.125" y2="983.125"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="257.5" x="2845" y="1003.8824">explicit MotionFrame(const Frame &amp;frame);</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="210" x="2845" y="1022.6611">SeVector3f getMotionData() const;</text><!--MD5=[dec54d7cb8b1d8e90915a6cdfcdfb61b]
class FrameSet--><rect fill="#FEFECE" filter="url(#ftkelr2lftzvn)" height="285.3442" id="FrameSet" style="stroke: #A80036; stroke-width: 1.875;" width="547.5" x="3153.75" y="839.375"/><ellipse cx="3388.4375" cy="859.375" fill="#ADD1B2" rx="13.75" ry="13.75" style="stroke: #A80036; stroke-width: 1.25;"/><path d="M3388.0469,866.875 Q3385.625,866.875 3384.2188,865.0977 Q3382.8125,863.3008 3382.8125,859.6094 Q3382.8125,856.4844 3384.2969,854.375 Q3385.7813,852.2656 3388.3594,852.2656 Q3388.9258,852.2656 3389.4727,852.2656 Q3390.0195,852.2656 3390.4102,852.2656 Q3390.7227,852.2656 3390.918,852.2656 Q3391.1328,852.2656 3391.6406,852.2656 L3392.5195,856.875 L3391.1914,856.875 Q3390.6445,855.5078 3389.9219,854.9414 Q3389.2188,854.375 3388.0664,854.375 Q3386.6211,854.375 3385.7617,855.8594 Q3384.9219,857.3242 3384.9219,859.6094 Q3384.9219,862.1289 3385.5664,863.457 Q3386.2305,864.7656 3387.9883,864.7656 Q3389.1406,864.7656 3389.9414,864.0625 Q3390.7617,863.3398 3391.1914,861.6016 L3392.4805,862.2461 Q3391.9922,864.4336 3390.8203,865.6641 Q3389.6484,866.875 3388.0469,866.875 Z "/><text fill="#000000" font-family="sans-serif" font-size="15" lengthAdjust="spacingAndGlyphs" textLength="67.5" x="3414.0625" y="866.322">FrameSet</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="3155" x2="3700" y1="879.375" y2="879.375"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="76.25" x="3161.25" y="900.1324">size_t size_;</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="3155" x2="3700" y1="908.1537" y2="908.1537"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="71.25" x="3161.25" y="928.9111">FrameSet();</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="238.75" x="3161.25" y="947.6898">explicit FrameSet(const Frame &amp;frame);</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="223.75" x="3161.25" y="966.4685">Frame operator[](size_t index) const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="290" x="3161.25" y="985.2472">VideoFrame operator[](FrameId frame_id) const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="532.5" x="3161.25" y="1004.0259">Frame firstOrDefault(FrameId frame_id, FrameFormat format = FrameFormat::Any) const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="475" x="3161.25" y="1022.8046">Frame first(FrameId frame_id, FrameFormat format = FrameFormat::Any) const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="322.5" x="3161.25" y="1041.5833">VideoFrame getVideoFrame(FrameId frame_id) const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="218.75" x="3161.25" y="1060.3619">DepthFrame getDepthFrame() const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="116.25" x="3161.25" y="1079.1406">size_t size() const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="130" x="3161.25" y="1097.9193">iterator begin() const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="120" x="3161.25" y="1116.698">iterator end() const;</text><!--MD5=[2c4eca07081f8bea904069f7ea701aa7]
class SeFrameCallback--><rect fill="#FEFECE" filter="url(#ftkelr2lftzvn)" height="60" id="SeFrameCallback" style="stroke: #A80036; stroke-width: 1.875;" width="163.75" x="2028.125" y="328.125"/><ellipse cx="2046.875" cy="348.125" fill="#ADD1B2" rx="13.75" ry="13.75" style="stroke: #A80036; stroke-width: 1.25;"/><path d="M2046.4844,355.625 Q2044.0625,355.625 2042.6563,353.8477 Q2041.25,352.0508 2041.25,348.3594 Q2041.25,345.2344 2042.7344,343.125 Q2044.2188,341.0156 2046.7969,341.0156 Q2047.3633,341.0156 2047.9102,341.0156 Q2048.457,341.0156 2048.8477,341.0156 Q2049.1602,341.0156 2049.3555,341.0156 Q2049.5703,341.0156 2050.0781,341.0156 L2050.957,345.625 L2049.6289,345.625 Q2049.082,344.2578 2048.3594,343.6914 Q2047.6563,343.125 2046.5039,343.125 Q2045.0586,343.125 2044.1992,344.6094 Q2043.3594,346.0742 2043.3594,348.3594 Q2043.3594,350.8789 2044.0039,352.207 Q2044.668,353.5156 2046.4258,353.5156 Q2047.5781,353.5156 2048.3789,352.8125 Q2049.1992,352.0898 2049.6289,350.3516 L2050.918,350.9961 Q2050.4297,353.1836 2049.2578,354.4141 Q2048.0859,355.625 2046.4844,355.625 Z "/><text fill="#000000" font-family="sans-serif" font-size="15" lengthAdjust="spacingAndGlyphs" textLength="123.75" x="2064.375" y="355.072">SeFrameCallback</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="2029.375" x2="2190.625" y1="368.125" y2="368.125"/><line style="stroke: #A80036; stroke-width: 1.875;" x1="2029.375" x2="2190.625" y1="378.125" y2="378.125"/><!--MD5=[2383d439193d88dcafec75587fe13938]
class FramCallback--><rect fill="#FEFECE" filter="url(#ftkelr2lftzvn)" height="135.1147" id="FramCallback" style="stroke: #A80036; stroke-width: 1.875;" width="432.5" x="1563.75" y="914.375"/><ellipse cx="1726.5625" cy="934.375" fill="#ADD1B2" rx="13.75" ry="13.75" style="stroke: #A80036; stroke-width: 1.25;"/><path d="M1726.1719,941.875 Q1723.75,941.875 1722.3438,940.0977 Q1720.9375,938.3008 1720.9375,934.6094 Q1720.9375,931.4844 1722.4219,929.375 Q1723.9063,927.2656 1726.4844,927.2656 Q1727.0508,927.2656 1727.5977,927.2656 Q1728.1445,927.2656 1728.5352,927.2656 Q1728.8477,927.2656 1729.043,927.2656 Q1729.2578,927.2656 1729.7656,927.2656 L1730.6445,931.875 L1729.3164,931.875 Q1728.7695,930.5078 1728.0469,929.9414 Q1727.3438,929.375 1726.1914,929.375 Q1724.7461,929.375 1723.8867,930.8594 Q1723.0469,932.3242 1723.0469,934.6094 Q1723.0469,937.1289 1723.6914,938.457 Q1724.3555,939.7656 1726.1133,939.7656 Q1727.2656,939.7656 1728.0664,939.0625 Q1728.8867,938.3398 1729.3164,936.6016 L1730.6055,937.2461 Q1730.1172,939.4336 1728.9453,940.6641 Q1727.7734,941.875 1726.1719,941.875 Z "/><text fill="#000000" font-family="sans-serif" font-size="15" lengthAdjust="spacingAndGlyphs" textLength="96.25" x="1752.1875" y="941.322">FramCallback</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="1565" x2="1995" y1="954.375" y2="954.375"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="136.25" x="1571.25" y="975.1324">T on_frame_function_;</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="1565" x2="1995" y1="983.1537" y2="983.1537"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="417.5" x="1571.25" y="1003.9111">explicit FramCallback(T on_frame) : on_frame_function_(on_frame) {}</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="256.25" x="1571.25" y="1022.6898">void onFrame(SeFrame *frame) override {}</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="223.75" x="1571.25" y="1041.4685">void release() override { delete this; }</text><!--MD5=[a11c5f3b74cb8390fbd93afc18f1745a]
class FrameQueue--><rect fill="#FEFECE" filter="url(#ftkelr2lftzvn)" height="304.1229" id="FrameQueue" style="stroke: #A80036; stroke-width: 1.875;" width="420" x="1563.75" y="206.25"/><ellipse cx="1722.8125" cy="226.25" fill="#ADD1B2" rx="13.75" ry="13.75" style="stroke: #A80036; stroke-width: 1.25;"/><path d="M1722.4219,233.75 Q1720,233.75 1718.5938,231.9727 Q1717.1875,230.1758 1717.1875,226.4844 Q1717.1875,223.3594 1718.6719,221.25 Q1720.1563,219.1406 1722.7344,219.1406 Q1723.3008,219.1406 1723.8477,219.1406 Q1724.3945,219.1406 1724.7852,219.1406 Q1725.0977,219.1406 1725.293,219.1406 Q1725.5078,219.1406 1726.0156,219.1406 L1726.8945,223.75 L1725.5664,223.75 Q1725.0195,222.3828 1724.2969,221.8164 Q1723.5938,221.25 1722.4414,221.25 Q1720.9961,221.25 1720.1367,222.7344 Q1719.2969,224.1992 1719.2969,226.4844 Q1719.2969,229.0039 1719.9414,230.332 Q1720.6055,231.6406 1722.3633,231.6406 Q1723.5156,231.6406 1724.3164,230.9375 Q1725.1367,230.2148 1725.5664,228.4766 L1726.8555,229.1211 Q1726.3672,231.3086 1725.1953,232.5391 Q1724.0234,233.75 1722.4219,233.75 Z "/><text fill="#000000" font-family="sans-serif" font-size="15" lengthAdjust="spacingAndGlyphs" textLength="91.25" x="1748.4375" y="233.197">FrameQueue</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="1565" x2="1982.5" y1="246.25" y2="246.25"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="253.75" x="1571.25" y="267.0074">std::shared_ptr&lt;SeFrameQueue&gt; queue_;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="102.5" x="1571.25" y="285.7861">size_t capacity_;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="68.75" x="1571.25" y="304.5648">bool keep_;</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="1565" x2="1982.5" y1="312.5861" y2="312.5861"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="398.75" x="1571.25" y="333.3435">explicit FrameQueue(uint32_t capacity, bool keep_frames = false);</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="91.25" x="1571.25" y="352.1222">FrameQueue();</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="180" x="1571.25" y="370.9009">void operator()(Frame frame);</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="171.25" x="1571.25" y="389.6796">void enqueue(Frame frame);</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="332.5" x="1571.25" y="408.4583">Frame waitForFrame(int32_t timeout_ms = 5000) const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="211.25" x="1571.25" y="427.2369">bool pollForFrame(T *output) const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="405" x="1571.25" y="446.0156">bool tryWaitForFrame(T *output, uint32_t timeout_ms = 5000) const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="0" x="1575" y="464.7943"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="262.5" x="1571.25" y="483.573">size_t capacity() const { return capacity_; }</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="251.25" x="1571.25" y="502.3517">bool keepFrames() const { return keep_; }</text><!--MD5=[80729f9b96dc842a01e5aecdc282aac0]
class StreamProfile--><rect fill="#FEFECE" filter="url(#ftkelr2lftzvn)" height="548.2458" id="StreamProfile" style="stroke: #A80036; stroke-width: 1.875;" width="447.5" x="4755" y="83.75"/><ellipse cx="4926.5625" cy="103.75" fill="#ADD1B2" rx="13.75" ry="13.75" style="stroke: #A80036; stroke-width: 1.25;"/><path d="M4926.1719,111.25 Q4923.75,111.25 4922.3438,109.4727 Q4920.9375,107.6758 4920.9375,103.9844 Q4920.9375,100.8594 4922.4219,98.75 Q4923.9063,96.6406 4926.4844,96.6406 Q4927.0508,96.6406 4927.5977,96.6406 Q4928.1445,96.6406 4928.5352,96.6406 Q4928.8477,96.6406 4929.043,96.6406 Q4929.2578,96.6406 4929.7656,96.6406 L4930.6445,101.25 L4929.3164,101.25 Q4928.7695,99.8828 4928.0469,99.3164 Q4927.3438,98.75 4926.1914,98.75 Q4924.7461,98.75 4923.8867,100.2344 Q4923.0469,101.6992 4923.0469,103.9844 Q4923.0469,106.5039 4923.6914,107.832 Q4924.3555,109.1406 4926.1133,109.1406 Q4927.2656,109.1406 4928.0664,108.4375 Q4928.8867,107.7148 4929.3164,105.9766 L4930.6055,106.6211 Q4930.1172,108.8086 4928.9453,110.0391 Q4927.7734,111.25 4926.1719,111.25 Z "/><text fill="#000000" font-family="sans-serif" font-size="15" lengthAdjust="spacingAndGlyphs" textLength="93.75" x="4952.1875" y="110.697">StreamProfile</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="4756.25" x2="5201.25" y1="123.75" y2="123.75"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="256.25" x="4762.5" y="144.5074">std::shared_ptr&lt;SeStreamProfile&gt; profile_;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="83.75" x="4762.5" y="163.2861">int index_ = 0;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="68.75" x="4762.5" y="182.0648">int uid_ = 0;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="117.5" x="4762.5" y="200.8435">int frame_rete_ = 0;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="258.75" x="4762.5" y="219.6222">FrameFormat format_ = FrameFormat::Any;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="236.25" x="4762.5" y="238.4009">FrameId frame_id_ = FrameId::NotUsed;</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="4756.25" x2="5201.25" y1="246.4221" y2="246.4221"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="93.75" x="4762.5" y="267.1796">StreamProfile();</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="281.25" x="4762.5" y="285.9583">explicit StreamProfile(SeStreamProfile *profile);</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="256.25" x="4762.5" y="304.7369">explicit operator const SeStreamProfile *();</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="176.25" x="4762.5" y="323.5156">explicit operator bool() const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="296.25" x="4762.5" y="342.2943">bool operator==(const StreamProfile &amp;rhs) const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="212.5" x="4762.5" y="361.073">const SeStreamProfile *get() const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="127.5" x="4762.5" y="379.8517">int32_t index() const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="145" x="4762.5" y="398.6304">int32_t uniqueId() const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="147.5" x="4762.5" y="417.4091">FrameId frameId() const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="172.5" x="4762.5" y="436.1877">FrameFormat format() const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="122.5" x="4762.5" y="454.9664">uint32_t fps() const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="170" x="4762.5" y="473.7451">void setIndex(int32_t index);</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="173.75" x="4762.5" y="492.5238">void setUniqueId(int32_t uid);</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="212.5" x="4762.5" y="511.3025">void setFrameId(FrameId frame_id);</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="223.75" x="4762.5" y="530.0812">void setFormat(FrameFormat format);</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="197.5" x="4762.5" y="548.8599">void setFrameRate(uint32_t fps);</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="347.5" x="4762.5" y="567.6385">Extrinsics getExtrinsicsTo(const StreamProfile &amp;to) const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="432.5" x="4762.5" y="586.4172">void registerExtrinsicsTo(const StreamProfile &amp;to, Extrinsics extrinsics);</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="90" x="4762.5" y="605.1959">bool is() const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="77.5" x="4762.5" y="623.9746">T as() const;</text><!--MD5=[e740f22d035736d3f794be60245f0afd]
class VideoStreamProfile--><rect fill="#FEFECE" filter="url(#ftkelr2lftzvn)" height="210.2295" id="VideoStreamProfile" style="stroke: #A80036; stroke-width: 1.875;" width="456.25" x="4374.375" y="876.875"/><ellipse cx="4530.9375" cy="896.875" fill="#ADD1B2" rx="13.75" ry="13.75" style="stroke: #A80036; stroke-width: 1.25;"/><path d="M4530.5469,904.375 Q4528.125,904.375 4526.7188,902.5977 Q4525.3125,900.8008 4525.3125,897.1094 Q4525.3125,893.9844 4526.7969,891.875 Q4528.2813,889.7656 4530.8594,889.7656 Q4531.4258,889.7656 4531.9727,889.7656 Q4532.5195,889.7656 4532.9102,889.7656 Q4533.2227,889.7656 4533.418,889.7656 Q4533.6328,889.7656 4534.1406,889.7656 L4535.0195,894.375 L4533.6914,894.375 Q4533.1445,893.0078 4532.4219,892.4414 Q4531.7188,891.875 4530.5664,891.875 Q4529.1211,891.875 4528.2617,893.3594 Q4527.4219,894.8242 4527.4219,897.1094 Q4527.4219,899.6289 4528.0664,900.957 Q4528.7305,902.2656 4530.4883,902.2656 Q4531.6406,902.2656 4532.4414,901.5625 Q4533.2617,900.8398 4533.6914,899.1016 L4534.9805,899.7461 Q4534.4922,901.9336 4533.3203,903.1641 Q4532.1484,904.375 4530.5469,904.375 Z "/><text fill="#000000" font-family="sans-serif" font-size="15" lengthAdjust="spacingAndGlyphs" textLength="132.5" x="4556.5625" y="903.822">VideoStreamProfile</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="4375.625" x2="4829.375" y1="916.875" y2="916.875"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="62.5" x="4381.875" y="937.6324">int width_;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="65" x="4381.875" y="956.4111">int height_;</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="4375.625" x2="4829.375" y1="964.4324" y2="964.4324"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="318.75" x="4381.875" y="985.1898">explicit VideoStreamProfile(const StreamProfile &amp;sp);</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="441.25" x="4381.875" y="1003.9685">StreamProfile clone(FrameId frame_id, int32_t index, FrameFormat format,</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="288.75" x="4381.875" y="1022.7472">int width, int height, const Intrinsics &amp;intr) const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="102.5" x="4381.875" y="1041.5259">int width() const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="105" x="4381.875" y="1060.3046">int height() const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="181.25" x="4381.875" y="1079.0833">Intrinsics getIntrinsics() const;</text><!--MD5=[8e753cd603db581b2790df714353db17]
class MotionStreamProfile--><rect fill="#FEFECE" filter="url(#ftkelr2lftzvn)" height="97.5574" id="MotionStreamProfile" style="stroke: #A80036; stroke-width: 1.875;" width="337.5" x="4875" y="933.125"/><ellipse cx="4969.0625" cy="953.125" fill="#ADD1B2" rx="13.75" ry="13.75" style="stroke: #A80036; stroke-width: 1.25;"/><path d="M4968.6719,960.625 Q4966.25,960.625 4964.8438,958.8477 Q4963.4375,957.0508 4963.4375,953.3594 Q4963.4375,950.2344 4964.9219,948.125 Q4966.4063,946.0156 4968.9844,946.0156 Q4969.5508,946.0156 4970.0977,946.0156 Q4970.6445,946.0156 4971.0352,946.0156 Q4971.3477,946.0156 4971.543,946.0156 Q4971.7578,946.0156 4972.2656,946.0156 L4973.1445,950.625 L4971.8164,950.625 Q4971.2695,949.2578 4970.5469,948.6914 Q4969.8438,948.125 4968.6914,948.125 Q4967.2461,948.125 4966.3867,949.6094 Q4965.5469,951.0742 4965.5469,953.3594 Q4965.5469,955.8789 4966.1914,957.207 Q4966.8555,958.5156 4968.6133,958.5156 Q4969.7656,958.5156 4970.5664,957.8125 Q4971.3867,957.0898 4971.8164,955.3516 L4973.1055,955.9961 Q4972.6172,958.1836 4971.4453,959.4141 Q4970.2734,960.625 4968.6719,960.625 Z "/><text fill="#000000" font-family="sans-serif" font-size="15" lengthAdjust="spacingAndGlyphs" textLength="138.75" x="4994.6875" y="960.072">MotionStreamProfile</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="4876.25" x2="5211.25" y1="973.125" y2="973.125"/><line style="stroke: #A80036; stroke-width: 1.875;" x1="4876.25" x2="5211.25" y1="983.125" y2="983.125"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="322.5" x="4882.5" y="1003.8824">explicit MotionStreamProfile(const StreamProfile &amp;sp);</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="300" x="4882.5" y="1022.6611">MotionDeviceIntrinsics getMotionIntrinsics() const;</text><!--MD5=[e17694220cb748398e01fbcae0a2ca7d]
class PipelineProfile--><rect fill="#FEFECE" filter="url(#ftkelr2lftzvn)" height="210.2295" id="PipelineProfile" style="stroke: #A80036; stroke-width: 1.875;" width="403.75" x="4306.875" y="253.125"/><ellipse cx="4453.4375" cy="273.125" fill="#ADD1B2" rx="13.75" ry="13.75" style="stroke: #A80036; stroke-width: 1.25;"/><path d="M4453.0469,280.625 Q4450.625,280.625 4449.2188,278.8477 Q4447.8125,277.0508 4447.8125,273.3594 Q4447.8125,270.2344 4449.2969,268.125 Q4450.7813,266.0156 4453.3594,266.0156 Q4453.9258,266.0156 4454.4727,266.0156 Q4455.0195,266.0156 4455.4102,266.0156 Q4455.7227,266.0156 4455.918,266.0156 Q4456.1328,266.0156 4456.6406,266.0156 L4457.5195,270.625 L4456.1914,270.625 Q4455.6445,269.2578 4454.9219,268.6914 Q4454.2188,268.125 4453.0664,268.125 Q4451.6211,268.125 4450.7617,269.6094 Q4449.9219,271.0742 4449.9219,273.3594 Q4449.9219,275.8789 4450.5664,277.207 Q4451.2305,278.5156 4452.9883,278.5156 Q4454.1406,278.5156 4454.9414,277.8125 Q4455.7617,277.0898 4456.1914,275.3516 L4457.4805,275.9961 Q4456.9922,278.1836 4455.8203,279.4141 Q4454.6484,280.625 4453.0469,280.625 Z "/><text fill="#000000" font-family="sans-serif" font-size="15" lengthAdjust="spacingAndGlyphs" textLength="100" x="4479.0625" y="280.072">PipelineProfile</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="4308.125" x2="4709.375" y1="293.125" y2="293.125"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="311.25" x="4314.375" y="313.8824">std::shared_ptr&lt;SePipelineProfile&gt; pipeline_profile_;</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="4308.125" x2="4709.375" y1="321.9037" y2="321.9037"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="96.25" x="4314.375" y="342.6611">PipelineProfile();</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="388.75" x="4314.375" y="361.4398">explicit PipelineProfile(std::shared_ptr&lt;SePipelineProfile&gt; profile);</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="176.25" x="4314.375" y="380.2185">explicit operator bool() const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="320" x="4314.375" y="398.9972">explicit operator std::shared_ptr&lt;SePipelineProfile&gt;();</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="283.75" x="4314.375" y="417.7759">std::vector&lt;StreamProfile&gt; getStreams() const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="385" x="4314.375" y="436.5546">StreamProfile getStream(FrameId frame_id, int index = -1) const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="156.25" x="4314.375" y="455.3333">Device getDevice() const;</text><!--MD5=[23875cf4275438f8b989473c14f09b73]
class PipelineConfig--><rect fill="#FEFECE" filter="url(#ftkelr2lftzvn)" height="548.2458" id="PipelineConfig" style="stroke: #A80036; stroke-width: 1.875;" width="585" x="3745" y="707.5"/><ellipse cx="3981.5625" cy="727.5" fill="#ADD1B2" rx="13.75" ry="13.75" style="stroke: #A80036; stroke-width: 1.25;"/><path d="M3981.1719,735 Q3978.75,735 3977.3438,733.2227 Q3975.9375,731.4258 3975.9375,727.7344 Q3975.9375,724.6094 3977.4219,722.5 Q3978.9063,720.3906 3981.4844,720.3906 Q3982.0508,720.3906 3982.5977,720.3906 Q3983.1445,720.3906 3983.5352,720.3906 Q3983.8477,720.3906 3984.043,720.3906 Q3984.2578,720.3906 3984.7656,720.3906 L3985.6445,725 L3984.3164,725 Q3983.7695,723.6328 3983.0469,723.0664 Q3982.3438,722.5 3981.1914,722.5 Q3979.7461,722.5 3978.8867,723.9844 Q3978.0469,725.4492 3978.0469,727.7344 Q3978.0469,730.2539 3978.6914,731.582 Q3979.3555,732.8906 3981.1133,732.8906 Q3982.2656,732.8906 3983.0664,732.1875 Q3983.8867,731.4648 3984.3164,729.7266 L3985.6055,730.3711 Q3985.1172,732.5586 3983.9453,733.7891 Q3982.7734,735 3981.1719,735 Z "/><text fill="#000000" font-family="sans-serif" font-size="15" lengthAdjust="spacingAndGlyphs" textLength="101.25" x="4007.1875" y="734.447">PipelineConfig</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="3746.25" x2="4328.75" y1="747.5" y2="747.5"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="53.75" x="3752.5" y="768.2574">int index,</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="88.75" x="3752.5" y="787.0361">uint32_t width,</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="91.25" x="3752.5" y="805.8148">uint32_t height,</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="125" x="3752.5" y="824.5935">FrameFormat format,</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="55" x="3752.5" y="843.3722">int width,</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="57.5" x="3752.5" y="862.1509">int height,</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="251.25" x="3752.5" y="880.9296">FrameFormat format = FrameFormat::Any,</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="0" x="3756.25" y="899.7083"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="260" x="3752.5" y="918.4869">std::shared_ptr&lt;SePipelineConfig&gt; config_;</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="3746.25" x2="4328.75" y1="926.5082" y2="926.5082"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="97.5" x="3752.5" y="947.2656">PipelineConfig();</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="223.75" x="3752.5" y="966.0443">void enableStream(FrameId frame_id,</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="118.75" x="3752.5" y="984.823">uint32_t framerate);</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="223.75" x="3752.5" y="1003.6017">void enableStream(FrameId frame_id,</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="107.5" x="3752.5" y="1022.3804">int framerate = 0);</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="362.5" x="3752.5" y="1041.1591">void enableStream(FrameId frame_id, int stream_index = -1);</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="463.75" x="3752.5" y="1059.9377">void enableStream(FrameId frame_id, FrameFormat format, int framerate = 0);</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="570" x="3752.5" y="1078.7164">void enableStream(FrameId frame_id, int stream_index, FrameFormat format, int framerate = 0);</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="147.5" x="3752.5" y="1097.4951">void enableAllStreams();</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="266.25" x="3752.5" y="1116.2738">void enableDevice(const std::string &amp;serial);</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="437.5" x="3752.5" y="1135.0525">void enableDeviceFromFile(const std::string &amp;file, bool repeat_playback);</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="316.25" x="3752.5" y="1153.8312">void disableStream(FrameId frame_id, int index = -1);</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="150" x="3752.5" y="1172.6099">void disableAllStreams();</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="400" x="3752.5" y="1191.3885">PipelineProfile resolve(std::shared_ptr&lt;SePipeline&gt; pipeline) const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="368.75" x="3752.5" y="1210.1672">bool canResolve(std::shared_ptr&lt;SePipeline&gt; pipeline) const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="281.25" x="3752.5" y="1228.9459">std::shared_ptr&lt;SePipelineConfig&gt; get() const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="358.75" x="3752.5" y="1247.7246">explicit operator std::shared_ptr&lt;SePipelineConfig&gt;() const;</text><!--MD5=[5d7f87ad7be124bcf8ad2c9ead1692a4]
class Pipeline--><rect fill="#FEFECE" filter="url(#ftkelr2lftzvn)" height="304.1229" id="Pipeline" style="stroke: #A80036; stroke-width: 1.875;" width="508.75" x="3754.375" y="206.25"/><ellipse cx="3975.3125" cy="226.25" fill="#ADD1B2" rx="13.75" ry="13.75" style="stroke: #A80036; stroke-width: 1.25;"/><path d="M3974.9219,233.75 Q3972.5,233.75 3971.0938,231.9727 Q3969.6875,230.1758 3969.6875,226.4844 Q3969.6875,223.3594 3971.1719,221.25 Q3972.6563,219.1406 3975.2344,219.1406 Q3975.8008,219.1406 3976.3477,219.1406 Q3976.8945,219.1406 3977.2852,219.1406 Q3977.5977,219.1406 3977.793,219.1406 Q3978.0078,219.1406 3978.5156,219.1406 L3979.3945,223.75 L3978.0664,223.75 Q3977.5195,222.3828 3976.7969,221.8164 Q3976.0938,221.25 3974.9414,221.25 Q3973.4961,221.25 3972.6367,222.7344 Q3971.7969,224.1992 3971.7969,226.4844 Q3971.7969,229.0039 3972.4414,230.332 Q3973.1055,231.6406 3974.8633,231.6406 Q3976.0156,231.6406 3976.8164,230.9375 Q3977.6367,230.2148 3978.0664,228.4766 L3979.3555,229.1211 Q3978.8672,231.3086 3977.6953,232.5391 Q3976.5234,233.75 3974.9219,233.75 Z "/><text fill="#000000" font-family="sans-serif" font-size="15" lengthAdjust="spacingAndGlyphs" textLength="56.25" x="4000.9375" y="233.197">Pipeline</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="3755.625" x2="4261.875" y1="246.25" y2="246.25"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="228.75" x="3761.875" y="267.0074">std::shared_ptr&lt;SePipeline&gt; pipeline_;</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="3755.625" x2="4261.875" y1="275.0287" y2="275.0287"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="316.25" x="3761.875" y="295.7861">explicit Pipeline(const Context&amp; context = Context());</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="127.5" x="3761.875" y="314.5648">PipelineProfile start();</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="298.75" x="3761.875" y="333.3435">PipelineProfile start(const PipelineConfig &amp;config);</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="187.5" x="3761.875" y="352.1222">PipelineProfile start(T callback);</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="366.25" x="3761.875" y="370.9009">PipelineProfile start(const PipelineConfig &amp;config, T callback);</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="68.75" x="3761.875" y="389.6796">void stop();</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="375" x="3761.875" y="408.4583">FrameSet waitForFrames(uint32_t timeout_ms = 15000) const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="292.5" x="3761.875" y="427.2369">bool pollForFrames(FrameSet *frame_set) const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="493.75" x="3761.875" y="446.0156">bool tryWaitForFrames(FrameSet *frame_set, uint32_t timeout_ms = 15000) const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="195" x="3761.875" y="464.7943">PipelineProfile getActiveProfile();</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="275" x="3761.875" y="483.573">operator std::shared_ptr&lt;SePipeline&gt;() const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="321.25" x="3761.875" y="502.3517">explicit Pipeline(std::shared_ptr&lt;SePipeline&gt; pipeline);</text><!--MD5=[a4867f0f4834f6ea89f520c5b0c00377]
class Options--><rect fill="#FEFECE" filter="url(#ftkelr2lftzvn)" height="322.9016" id="Options" style="stroke: #A80036; stroke-width: 1.875;" width="447.5" x="8190" y="196.875"/><ellipse cx="8381.5625" cy="216.875" fill="#ADD1B2" rx="13.75" ry="13.75" style="stroke: #A80036; stroke-width: 1.25;"/><path d="M8381.1719,224.375 Q8378.75,224.375 8377.3438,222.5977 Q8375.9375,220.8008 8375.9375,217.1094 Q8375.9375,213.9844 8377.4219,211.875 Q8378.9063,209.7656 8381.4844,209.7656 Q8382.0508,209.7656 8382.5977,209.7656 Q8383.1445,209.7656 8383.5352,209.7656 Q8383.8477,209.7656 8384.043,209.7656 Q8384.2578,209.7656 8384.7656,209.7656 L8385.6445,214.375 L8384.3164,214.375 Q8383.7695,213.0078 8383.0469,212.4414 Q8382.3438,211.875 8381.1914,211.875 Q8379.7461,211.875 8378.8867,213.3594 Q8378.0469,214.8242 8378.0469,217.1094 Q8378.0469,219.6289 8378.6914,220.957 Q8379.3555,222.2656 8381.1133,222.2656 Q8382.2656,222.2656 8383.0664,221.5625 Q8383.8867,220.8398 8384.3164,219.1016 L8385.6055,219.7461 Q8385.1172,221.9336 8383.9453,223.1641 Q8382.7734,224.375 8381.1719,224.375 Z "/><text fill="#000000" font-family="sans-serif" font-size="15" lengthAdjust="spacingAndGlyphs" textLength="53.75" x="8407.1875" y="223.822">Options</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="8191.25" x2="8636.25" y1="236.875" y2="236.875"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="126.25" x="8197.5" y="257.6324">SeOptions *options_;</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="8191.25" x2="8636.25" y1="265.6537" y2="265.6537"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="236.25" x="8197.5" y="286.4111">bool supports(OptionKey option) const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="342.5" x="8197.5" y="305.1898">std::string getOptionDescription(OptionKey option) const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="308.75" x="8197.5" y="323.9685">std::string getOptionName(OptionKey option) const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="432.5" x="8197.5" y="342.7472">std::string getOptionValueDescription(OptionKey option, float val) const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="241.25" x="8197.5" y="361.5259">float getOption(OptionKey option) const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="331.25" x="8197.5" y="380.3046">OptionRange getOptionRange(OptionKey option) const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="310" x="8197.5" y="399.0833">void setOption(OptionKey option, float value) const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="287.5" x="8197.5" y="417.8619">bool isOptionReadonly(OptionKey option) const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="325" x="8197.5" y="436.6406">std::vector&lt;OptionKey&gt; getSupportedOptions() const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="258.75" x="8197.5" y="455.4193">Options &amp;operator=(const Options &amp;other);</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="356.25" x="8197.5" y="474.198">Options(const Options &amp;other) : options_(other.options_) {}</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="347.5" x="8197.5" y="492.9767">explicit Options(SeOptions *opt = nullptr) : options_(opt) {}</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="211.25" x="8197.5" y="511.7554">Options &amp;operator=(const T &amp;dev);</text><!--MD5=[4260f2ae1ddc26f9f25161ff4b6187c3]
class SeFrameProcessorCallback--><rect fill="#FEFECE" filter="url(#ftkelr2lftzvn)" height="60" id="SeFrameProcessorCallback" style="stroke: #A80036; stroke-width: 1.875;" width="235" x="7787.5" y="328.125"/><ellipse cx="7806.25" cy="348.125" fill="#ADD1B2" rx="13.75" ry="13.75" style="stroke: #A80036; stroke-width: 1.25;"/><path d="M7805.8594,355.625 Q7803.4375,355.625 7802.0313,353.8477 Q7800.625,352.0508 7800.625,348.3594 Q7800.625,345.2344 7802.1094,343.125 Q7803.5938,341.0156 7806.1719,341.0156 Q7806.7383,341.0156 7807.2852,341.0156 Q7807.832,341.0156 7808.2227,341.0156 Q7808.5352,341.0156 7808.7305,341.0156 Q7808.9453,341.0156 7809.4531,341.0156 L7810.332,345.625 L7809.0039,345.625 Q7808.457,344.2578 7807.7344,343.6914 Q7807.0313,343.125 7805.8789,343.125 Q7804.4336,343.125 7803.5742,344.6094 Q7802.7344,346.0742 7802.7344,348.3594 Q7802.7344,350.8789 7803.3789,352.207 Q7804.043,353.5156 7805.8008,353.5156 Q7806.9531,353.5156 7807.7539,352.8125 Q7808.5742,352.0898 7809.0039,350.3516 L7810.293,350.9961 Q7809.8047,353.1836 7808.6328,354.4141 Q7807.4609,355.625 7805.8594,355.625 Z "/><text fill="#000000" font-family="sans-serif" font-size="15" lengthAdjust="spacingAndGlyphs" textLength="195" x="7823.75" y="355.072">SeFrameProcessorCallback</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="7788.75" x2="8021.25" y1="368.125" y2="368.125"/><line style="stroke: #A80036; stroke-width: 1.875;" x1="7788.75" x2="8021.25" y1="378.125" y2="378.125"/><!--MD5=[a1c81201a35b652dfaa424dafb8cb976]
class FrameProcessorCallback--><rect fill="#FEFECE" filter="url(#ftkelr2lftzvn)" height="148.5864" id="FrameProcessorCallback" style="stroke: #A80036; stroke-width: 1.875;" width="436.25" x="7686.875" y="907.5"/><ellipse cx="7811.5625" cy="934.2358" fill="#ADD1B2" rx="13.75" ry="13.75" style="stroke: #A80036; stroke-width: 1.25;"/><path d="M7811.1719,941.7358 Q7808.75,941.7358 7807.3438,939.9585 Q7805.9375,938.1616 7805.9375,934.4702 Q7805.9375,931.3452 7807.4219,929.2358 Q7808.9063,927.1265 7811.4844,927.1265 Q7812.0508,927.1265 7812.5977,927.1265 Q7813.1445,927.1265 7813.5352,927.1265 Q7813.8477,927.1265 7814.043,927.1265 Q7814.2578,927.1265 7814.7656,927.1265 L7815.6445,931.7358 L7814.3164,931.7358 Q7813.7695,930.3687 7813.0469,929.8022 Q7812.3438,929.2358 7811.1914,929.2358 Q7809.7461,929.2358 7808.8867,930.7202 Q7808.0469,932.1851 7808.0469,934.4702 Q7808.0469,936.9897 7808.6914,938.3179 Q7809.3555,939.6265 7811.1133,939.6265 Q7812.2656,939.6265 7813.0664,938.9233 Q7813.8867,938.2007 7814.3164,936.4624 L7815.6055,937.1069 Q7815.1172,939.2944 7813.9453,940.5249 Q7812.7734,941.7358 7811.1719,941.7358 Z "/><text fill="#000000" font-family="sans-serif" font-size="15" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="26.25" x="7912.1875" y="930.9399">«T»</text><text fill="#000000" font-family="sans-serif" font-size="15" lengthAdjust="spacingAndGlyphs" textLength="176.25" x="7837.1875" y="951.4258">FrameProcessorCallback</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="7688.125" x2="8121.875" y1="960.9717" y2="960.9717"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="136.25" x="7694.375" y="981.7291">T on_frame_function_;</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="7688.125" x2="8121.875" y1="989.7504" y2="989.7504"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="277.5" x="7694.375" y="1010.5078">explicit FrameProcessorCallback(T on_frame);</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="421.25" x="7694.375" y="1029.2865">void onFrame(SeFrame *frame, SeSyntheticSource *source) override;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="141.25" x="7694.375" y="1048.0652">void release() override;</text><!--MD5=[71054ef5bcadd3eb93f8209675a7b12b]
class FilterInterface--><rect fill="#FEFECE" filter="url(#ftkelr2lftzvn)" height="78.7787" id="FilterInterface" style="stroke: #A80036; stroke-width: 1.875;" width="296.25" x="7346.875" y="942.5"/><ellipse cx="7443.4375" cy="962.5" fill="#ADD1B2" rx="13.75" ry="13.75" style="stroke: #A80036; stroke-width: 1.25;"/><path d="M7443.0469,970 Q7440.625,970 7439.2188,968.2227 Q7437.8125,966.4258 7437.8125,962.7344 Q7437.8125,959.6094 7439.2969,957.5 Q7440.7813,955.3906 7443.3594,955.3906 Q7443.9258,955.3906 7444.4727,955.3906 Q7445.0195,955.3906 7445.4102,955.3906 Q7445.7227,955.3906 7445.918,955.3906 Q7446.1328,955.3906 7446.6406,955.3906 L7447.5195,960 L7446.1914,960 Q7445.6445,958.6328 7444.9219,958.0664 Q7444.2188,957.5 7443.0664,957.5 Q7441.6211,957.5 7440.7617,958.9844 Q7439.9219,960.4492 7439.9219,962.7344 Q7439.9219,965.2539 7440.5664,966.582 Q7441.2305,967.8906 7442.9883,967.8906 Q7444.1406,967.8906 7444.9414,967.1875 Q7445.7617,966.4648 7446.1914,964.7266 L7447.4805,965.3711 Q7446.9922,967.5586 7445.8203,968.7891 Q7444.6484,970 7443.0469,970 Z "/><text fill="#000000" font-family="sans-serif" font-size="15" lengthAdjust="spacingAndGlyphs" textLength="92.5" x="7469.0625" y="969.447">FilterInterface</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="7348.125" x2="7641.875" y1="982.5" y2="982.5"/><line style="stroke: #A80036; stroke-width: 1.875;" x1="7348.125" x2="7641.875" y1="992.5" y2="992.5"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="281.25" x="7354.375" y="1013.2574">virtual Frame process(Frame frame) const = 0;</text><!--MD5=[2f3abc2a5a09918f8928ea49388f9459]
class ProcessingBlock--><rect fill="#FEFECE" filter="url(#ftkelr2lftzvn)" height="266.5656" id="ProcessingBlock" style="stroke: #A80036; stroke-width: 1.875;" width="478.75" x="8166.875" y="848.75"/><ellipse cx="8342.8125" cy="868.75" fill="#ADD1B2" rx="13.75" ry="13.75" style="stroke: #A80036; stroke-width: 1.25;"/><path d="M8342.4219,876.25 Q8340,876.25 8338.5938,874.4727 Q8337.1875,872.6758 8337.1875,868.9844 Q8337.1875,865.8594 8338.6719,863.75 Q8340.1563,861.6406 8342.7344,861.6406 Q8343.3008,861.6406 8343.8477,861.6406 Q8344.3945,861.6406 8344.7852,861.6406 Q8345.0977,861.6406 8345.293,861.6406 Q8345.5078,861.6406 8346.0156,861.6406 L8346.8945,866.25 L8345.5664,866.25 Q8345.0195,864.8828 8344.2969,864.3164 Q8343.5938,863.75 8342.4414,863.75 Q8340.9961,863.75 8340.1367,865.2344 Q8339.2969,866.6992 8339.2969,868.9844 Q8339.2969,871.5039 8339.9414,872.832 Q8340.6055,874.1406 8342.3633,874.1406 Q8343.5156,874.1406 8344.3164,873.4375 Q8345.1367,872.7148 8345.5664,870.9766 L8346.8555,871.6211 Q8346.3672,873.8086 8345.1953,875.0391 Q8344.0234,876.25 8342.4219,876.25 Z "/><text fill="#000000" font-family="sans-serif" font-size="15" lengthAdjust="spacingAndGlyphs" textLength="116.25" x="8368.4375" y="875.697">ProcessingBlock</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="8168.125" x2="8644.375" y1="888.75" y2="888.75"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="270" x="8174.375" y="909.5074">std::shared_ptr&lt;SeProcessingBlock&gt; block_;</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="8168.125" x2="8644.375" y1="917.5287" y2="917.5287"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="463.75" x="8174.375" y="938.2861">explicit ProcessingBlock(const std::shared_ptr&lt;SeProcessingBlock&gt; &amp;block);</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="273.75" x="8174.375" y="957.0648">explicit ProcessingBlock(S processing_func);</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="222.5" x="8174.375" y="975.8435">explicit operator SeOptions *() const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="235" x="8174.375" y="994.6222">virtual SeProcessingBlock *get() const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="150" x="8174.375" y="1013.4009">void start(S on_frame) {}</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="190" x="8174.375" y="1032.1796">S &amp;operator&gt;&gt;(S &amp;on_frame) {}</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="195" x="8174.375" y="1050.9583">void invoke(Frame frame) const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="221.25" x="8174.375" y="1069.7369">bool support(CameraInfo info) const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="251.25" x="8174.375" y="1088.5156">std::string getInfo(CameraInfo info) const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="421.25" x="8174.375" y="1107.2943">void registerSimpleOption(OptionKey option_key, OptionRange range);</text><!--MD5=[bddb511951cf0a1d6a79f67b0c2ed87d]
class Filter--><rect fill="#FEFECE" filter="url(#ftkelr2lftzvn)" height="229.0082" id="Filter" style="stroke: #A80036; stroke-width: 1.875;" width="558.75" x="7644.375" y="1331.25"/><ellipse cx="7901.5625" cy="1351.25" fill="#ADD1B2" rx="13.75" ry="13.75" style="stroke: #A80036; stroke-width: 1.25;"/><path d="M7901.1719,1358.75 Q7898.75,1358.75 7897.3438,1356.9727 Q7895.9375,1355.1758 7895.9375,1351.4844 Q7895.9375,1348.3594 7897.4219,1346.25 Q7898.9063,1344.1406 7901.4844,1344.1406 Q7902.0508,1344.1406 7902.5977,1344.1406 Q7903.1445,1344.1406 7903.5352,1344.1406 Q7903.8477,1344.1406 7904.043,1344.1406 Q7904.2578,1344.1406 7904.7656,1344.1406 L7905.6445,1348.75 L7904.3164,1348.75 Q7903.7695,1347.3828 7903.0469,1346.8164 Q7902.3438,1346.25 7901.1914,1346.25 Q7899.7461,1346.25 7898.8867,1347.7344 Q7898.0469,1349.1992 7898.0469,1351.4844 Q7898.0469,1354.0039 7898.6914,1355.332 Q7899.3555,1356.6406 7901.1133,1356.6406 Q7902.2656,1356.6406 7903.0664,1355.9375 Q7903.8867,1355.2148 7904.3164,1353.4766 L7905.6055,1354.1211 Q7905.1172,1356.3086 7903.9453,1357.5391 Q7902.7734,1358.75 7901.1719,1358.75 Z "/><text fill="#000000" font-family="sans-serif" font-size="15" lengthAdjust="spacingAndGlyphs" textLength="33.75" x="7927.1875" y="1358.197">Filter</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="7645.625" x2="8201.875" y1="1371.25" y2="1371.25"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="130" x="7651.875" y="1392.0074">FrameQueue queue_;</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="7645.625" x2="8201.875" y1="1400.0287" y2="1400.0287"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="543.75" x="7651.875" y="1420.7861">explicit Filter(const std::shared_ptr&lt;SeProcessingBlock&gt; &amp;block, uint32_t queue_size = 1);</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="353.75" x="7651.875" y="1439.5648">explicit Filter(S processing_func, uint32_t queue_size = 1);</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="272.5" x="7651.875" y="1458.3435">Frame process(Frame frame) const override;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="191.25" x="7651.875" y="1477.1222">FrameQueue getQueue() const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="245" x="7651.875" y="1495.9009">SeProcessingBlock *get() const override</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="108.75" x="7651.875" y="1514.6796">bool is«T»() const</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="96.25" x="7651.875" y="1533.4583">T as«T»() const</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="127.5" x="7651.875" y="1552.2369">operator bool() const</text><!--MD5=[6160b145bfcb3c4e3bbf1042e0f30eec]
class SePlaybackChangedCallback--><rect fill="#FEFECE" filter="url(#ftkelr2lftzvn)" height="60" id="SePlaybackChangedCallback" style="stroke: #A80036; stroke-width: 1.875;" width="243.75" x="6979.375" y="328.125"/><ellipse cx="6998.125" cy="348.125" fill="#ADD1B2" rx="13.75" ry="13.75" style="stroke: #A80036; stroke-width: 1.25;"/><path d="M6997.7344,355.625 Q6995.3125,355.625 6993.9063,353.8477 Q6992.5,352.0508 6992.5,348.3594 Q6992.5,345.2344 6993.9844,343.125 Q6995.4688,341.0156 6998.0469,341.0156 Q6998.6133,341.0156 6999.1602,341.0156 Q6999.707,341.0156 7000.0977,341.0156 Q7000.4102,341.0156 7000.6055,341.0156 Q7000.8203,341.0156 7001.3281,341.0156 L7002.207,345.625 L7000.8789,345.625 Q7000.332,344.2578 6999.6094,343.6914 Q6998.9063,343.125 6997.7539,343.125 Q6996.3086,343.125 6995.4492,344.6094 Q6994.6094,346.0742 6994.6094,348.3594 Q6994.6094,350.8789 6995.2539,352.207 Q6995.918,353.5156 6997.6758,353.5156 Q6998.8281,353.5156 6999.6289,352.8125 Q7000.4492,352.0898 7000.8789,350.3516 L7002.168,350.9961 Q7001.6797,353.1836 7000.5078,354.4141 Q6999.3359,355.625 6997.7344,355.625 Z "/><text fill="#000000" font-family="sans-serif" font-size="15" lengthAdjust="spacingAndGlyphs" textLength="203.75" x="7015.625" y="355.072">SePlaybackChangedCallback</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="6980.625" x2="7221.875" y1="368.125" y2="368.125"/><line style="stroke: #A80036; stroke-width: 1.875;" x1="6980.625" x2="7221.875" y1="378.125" y2="378.125"/><!--MD5=[2febfa080340b32d215c91014a1d9b2a]
class StatusChangedCallback--><rect fill="#FEFECE" filter="url(#ftkelr2lftzvn)" height="148.5864" id="StatusChangedCallback" style="stroke: #A80036; stroke-width: 1.875;" width="402.5" x="6900" y="907.5"/><ellipse cx="7012.1875" cy="934.2358" fill="#ADD1B2" rx="13.75" ry="13.75" style="stroke: #A80036; stroke-width: 1.25;"/><path d="M7011.7969,941.7358 Q7009.375,941.7358 7007.9688,939.9585 Q7006.5625,938.1616 7006.5625,934.4702 Q7006.5625,931.3452 7008.0469,929.2358 Q7009.5313,927.1265 7012.1094,927.1265 Q7012.6758,927.1265 7013.2227,927.1265 Q7013.7695,927.1265 7014.1602,927.1265 Q7014.4727,927.1265 7014.668,927.1265 Q7014.8828,927.1265 7015.3906,927.1265 L7016.2695,931.7358 L7014.9414,931.7358 Q7014.3945,930.3687 7013.6719,929.8022 Q7012.9688,929.2358 7011.8164,929.2358 Q7010.3711,929.2358 7009.5117,930.7202 Q7008.6719,932.1851 7008.6719,934.4702 Q7008.6719,936.9897 7009.3164,938.3179 Q7009.9805,939.6265 7011.7383,939.6265 Q7012.8906,939.6265 7013.6914,938.9233 Q7014.5117,938.2007 7014.9414,936.4624 L7016.2305,937.1069 Q7015.7422,939.2944 7014.5703,940.5249 Q7013.3984,941.7358 7011.7969,941.7358 Z "/><text fill="#000000" font-family="sans-serif" font-size="15" font-style="italic" lengthAdjust="spacingAndGlyphs" textLength="26.25" x="7108.4375" y="930.9399">«T»</text><text fill="#000000" font-family="sans-serif" font-size="15" lengthAdjust="spacingAndGlyphs" textLength="167.5" x="7037.8125" y="951.4258">StatusChangedCallback</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="6901.25" x2="7301.25" y1="960.9717" y2="960.9717"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="198.75" x="6907.5" y="981.7291">T on_status_changed_function_;</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="6901.25" x2="7301.25" y1="989.7504" y2="989.7504"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="328.75" x="6907.5" y="1010.5078">explicit StatusChangedCallback(T on_status_changed)</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="387.5" x="6907.5" y="1029.2865">void onPlaybackStatusChanged(PlaybackStatus status) override</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="137.5" x="6907.5" y="1048.0652">void release() override</text><!--MD5=[97d46ae094d28e0d28828e4b8046fed1]
class Sensor--><rect fill="#FEFECE" filter="url(#ftkelr2lftzvn)" height="435.5737" id="Sensor" style="stroke: #A80036; stroke-width: 1.875;" width="392.5" x="8718.75" y="764.375"/><ellipse cx="8884.6875" cy="784.375" fill="#ADD1B2" rx="13.75" ry="13.75" style="stroke: #A80036; stroke-width: 1.25;"/><path d="M8884.2969,791.875 Q8881.875,791.875 8880.4688,790.0977 Q8879.0625,788.3008 8879.0625,784.6094 Q8879.0625,781.4844 8880.5469,779.375 Q8882.0313,777.2656 8884.6094,777.2656 Q8885.1758,777.2656 8885.7227,777.2656 Q8886.2695,777.2656 8886.6602,777.2656 Q8886.9727,777.2656 8887.168,777.2656 Q8887.3828,777.2656 8887.8906,777.2656 L8888.7695,781.875 L8887.4414,781.875 Q8886.8945,780.5078 8886.1719,779.9414 Q8885.4688,779.375 8884.3164,779.375 Q8882.8711,779.375 8882.0117,780.8594 Q8881.1719,782.3242 8881.1719,784.6094 Q8881.1719,787.1289 8881.8164,788.457 Q8882.4805,789.7656 8884.2383,789.7656 Q8885.3906,789.7656 8886.1914,789.0625 Q8887.0117,788.3398 8887.4414,786.6016 L8888.7305,787.2461 Q8888.2422,789.4336 8887.0703,790.6641 Q8885.8984,791.875 8884.2969,791.875 Z "/><text fill="#000000" font-family="sans-serif" font-size="15" lengthAdjust="spacingAndGlyphs" textLength="50" x="8910.3125" y="791.322">Sensor</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="8720" x2="9110" y1="804.375" y2="804.375"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="225" x="8726.25" y="825.1324">std::shared_ptr&lt;SeSensor&gt; sensor_;</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="8720" x2="9110" y1="833.1537" y2="833.1537"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="165" x="8726.25" y="853.9111">Sensor() : sensor_(nullptr);</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="342.5" x="8726.25" y="872.6898">explicit Sensor(const std::shared_ptr&lt;SeSensor&gt; &amp;dev);</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="281.25" x="8726.25" y="891.4685">explicit operator std::shared_ptr&lt;SeSensor&gt;();</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="377.5" x="8726.25" y="910.2472">Sensor &amp;operator=(const std::shared_ptr&lt;SeSensor&gt; &amp;other);</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="253.75" x="8726.25" y="929.0259">Sensor &amp;operator=(const Sensor &amp;other);</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="176.25" x="8726.25" y="947.8046">explicit operator bool() const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="287.5" x="8726.25" y="966.5833">const std::shared_ptr&lt;SeSensor&gt; &amp;get() const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="108.75" x="8726.25" y="985.3619">bool is«T»() const</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="96.25" x="8726.25" y="1004.1406">T as«T»() const</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="228.75" x="8726.25" y="1022.9193">bool supports(CameraInfo info) const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="251.25" x="8726.25" y="1041.698">std::string getInfo(CameraInfo info) const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="277.5" x="8726.25" y="1060.4767">void open(const StreamProfile &amp;profile) const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="365" x="8726.25" y="1079.2554">void open(const std::vector&lt;StreamProfile&gt; &amp;profiles) const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="112.5" x="8726.25" y="1098.0341">void close() const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="275" x="8726.25" y="1116.8127">void setNotificationCallback(T callback) const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="167.5" x="8726.25" y="1135.5914">void start(T callback) const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="106.25" x="8726.25" y="1154.3701">void stop() const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="321.25" x="8726.25" y="1173.1488">std::vector&lt;StreamProfile&gt; getStreamProfiles() const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="322.5" x="8726.25" y="1191.9275">std::vector&lt;StreamProfile&gt; getActiveStreams() const;</text><!--MD5=[08a4b91ac909a1ca8c62f8ae9442029b]
class ColorSensor--><rect fill="#FEFECE" filter="url(#ftkelr2lftzvn)" height="78.7787" id="ColorSensor" style="stroke: #A80036; stroke-width: 1.875;" width="127.5" x="8676.25" y="1406.25"/><ellipse cx="8695" cy="1426.25" fill="#ADD1B2" rx="13.75" ry="13.75" style="stroke: #A80036; stroke-width: 1.25;"/><path d="M8694.6094,1433.75 Q8692.1875,1433.75 8690.7813,1431.9727 Q8689.375,1430.1758 8689.375,1426.4844 Q8689.375,1423.3594 8690.8594,1421.25 Q8692.3438,1419.1406 8694.9219,1419.1406 Q8695.4883,1419.1406 8696.0352,1419.1406 Q8696.582,1419.1406 8696.9727,1419.1406 Q8697.2852,1419.1406 8697.4805,1419.1406 Q8697.6953,1419.1406 8698.2031,1419.1406 L8699.082,1423.75 L8697.7539,1423.75 Q8697.207,1422.3828 8696.4844,1421.8164 Q8695.7813,1421.25 8694.6289,1421.25 Q8693.1836,1421.25 8692.3242,1422.7344 Q8691.4844,1424.1992 8691.4844,1426.4844 Q8691.4844,1429.0039 8692.1289,1430.332 Q8692.793,1431.6406 8694.5508,1431.6406 Q8695.7031,1431.6406 8696.5039,1430.9375 Q8697.3242,1430.2148 8697.7539,1428.4766 L8699.043,1429.1211 Q8698.5547,1431.3086 8697.3828,1432.5391 Q8696.2109,1433.75 8694.6094,1433.75 Z "/><text fill="#000000" font-family="sans-serif" font-size="15" lengthAdjust="spacingAndGlyphs" textLength="87.5" x="8712.5" y="1433.197">ColorSensor</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="8677.5" x2="8802.5" y1="1446.25" y2="1446.25"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="36.25" x="8683.75" y="1467.0074">TODO</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="8677.5" x2="8802.5" y1="1475.0287" y2="1475.0287"/><!--MD5=[743d4a17dabdc8084517ef5feaebde75]
class MotionSensor--><rect fill="#FEFECE" filter="url(#ftkelr2lftzvn)" height="78.7787" id="MotionSensor" style="stroke: #A80036; stroke-width: 1.875;" width="135" x="8847.5" y="1406.25"/><ellipse cx="8866.25" cy="1426.25" fill="#ADD1B2" rx="13.75" ry="13.75" style="stroke: #A80036; stroke-width: 1.25;"/><path d="M8865.8594,1433.75 Q8863.4375,1433.75 8862.0313,1431.9727 Q8860.625,1430.1758 8860.625,1426.4844 Q8860.625,1423.3594 8862.1094,1421.25 Q8863.5938,1419.1406 8866.1719,1419.1406 Q8866.7383,1419.1406 8867.2852,1419.1406 Q8867.832,1419.1406 8868.2227,1419.1406 Q8868.5352,1419.1406 8868.7305,1419.1406 Q8868.9453,1419.1406 8869.4531,1419.1406 L8870.332,1423.75 L8869.0039,1423.75 Q8868.457,1422.3828 8867.7344,1421.8164 Q8867.0313,1421.25 8865.8789,1421.25 Q8864.4336,1421.25 8863.5742,1422.7344 Q8862.7344,1424.1992 8862.7344,1426.4844 Q8862.7344,1429.0039 8863.3789,1430.332 Q8864.043,1431.6406 8865.8008,1431.6406 Q8866.9531,1431.6406 8867.7539,1430.9375 Q8868.5742,1430.2148 8869.0039,1428.4766 L8870.293,1429.1211 Q8869.8047,1431.3086 8868.6328,1432.5391 Q8867.4609,1433.75 8865.8594,1433.75 Z "/><text fill="#000000" font-family="sans-serif" font-size="15" lengthAdjust="spacingAndGlyphs" textLength="95" x="8883.75" y="1433.197">MotionSensor</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="8848.75" x2="8981.25" y1="1446.25" y2="1446.25"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="36.25" x="8855" y="1467.0074">TODO</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="8848.75" x2="8981.25" y1="1475.0287" y2="1475.0287"/><!--MD5=[74353377c44d5c7b377f863146bd55a6]
class RoiSensor--><rect fill="#FEFECE" filter="url(#ftkelr2lftzvn)" height="78.7787" id="RoiSensor" style="stroke: #A80036; stroke-width: 1.875;" width="113.75" x="9026.875" y="1406.25"/><ellipse cx="9045.625" cy="1426.25" fill="#ADD1B2" rx="13.75" ry="13.75" style="stroke: #A80036; stroke-width: 1.25;"/><path d="M9045.2344,1433.75 Q9042.8125,1433.75 9041.4063,1431.9727 Q9040,1430.1758 9040,1426.4844 Q9040,1423.3594 9041.4844,1421.25 Q9042.9688,1419.1406 9045.5469,1419.1406 Q9046.1133,1419.1406 9046.6602,1419.1406 Q9047.207,1419.1406 9047.5977,1419.1406 Q9047.9102,1419.1406 9048.1055,1419.1406 Q9048.3203,1419.1406 9048.8281,1419.1406 L9049.707,1423.75 L9048.3789,1423.75 Q9047.832,1422.3828 9047.1094,1421.8164 Q9046.4063,1421.25 9045.2539,1421.25 Q9043.8086,1421.25 9042.9492,1422.7344 Q9042.1094,1424.1992 9042.1094,1426.4844 Q9042.1094,1429.0039 9042.7539,1430.332 Q9043.418,1431.6406 9045.1758,1431.6406 Q9046.3281,1431.6406 9047.1289,1430.9375 Q9047.9492,1430.2148 9048.3789,1428.4766 L9049.668,1429.1211 Q9049.1797,1431.3086 9048.0078,1432.5391 Q9046.8359,1433.75 9045.2344,1433.75 Z "/><text fill="#000000" font-family="sans-serif" font-size="15" lengthAdjust="spacingAndGlyphs" textLength="73.75" x="9063.125" y="1433.197">RoiSensor</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="9028.125" x2="9139.375" y1="1446.25" y2="1446.25"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="36.25" x="9034.375" y="1467.0074">TODO</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="9028.125" x2="9139.375" y1="1475.0287" y2="1475.0287"/><!--MD5=[b34f7b27dbb645fbff4e0afeeae0eff8]
class DepthSensor--><rect fill="#FEFECE" filter="url(#ftkelr2lftzvn)" height="78.7787" id="DepthSensor" style="stroke: #A80036; stroke-width: 1.875;" width="131.25" x="9184.375" y="1406.25"/><ellipse cx="9203.125" cy="1426.25" fill="#ADD1B2" rx="13.75" ry="13.75" style="stroke: #A80036; stroke-width: 1.25;"/><path d="M9202.7344,1433.75 Q9200.3125,1433.75 9198.9063,1431.9727 Q9197.5,1430.1758 9197.5,1426.4844 Q9197.5,1423.3594 9198.9844,1421.25 Q9200.4688,1419.1406 9203.0469,1419.1406 Q9203.6133,1419.1406 9204.1602,1419.1406 Q9204.707,1419.1406 9205.0977,1419.1406 Q9205.4102,1419.1406 9205.6055,1419.1406 Q9205.8203,1419.1406 9206.3281,1419.1406 L9207.207,1423.75 L9205.8789,1423.75 Q9205.332,1422.3828 9204.6094,1421.8164 Q9203.9063,1421.25 9202.7539,1421.25 Q9201.3086,1421.25 9200.4492,1422.7344 Q9199.6094,1424.1992 9199.6094,1426.4844 Q9199.6094,1429.0039 9200.2539,1430.332 Q9200.918,1431.6406 9202.6758,1431.6406 Q9203.8281,1431.6406 9204.6289,1430.9375 Q9205.4492,1430.2148 9205.8789,1428.4766 L9207.168,1429.1211 Q9206.6797,1431.3086 9205.5078,1432.5391 Q9204.3359,1433.75 9202.7344,1433.75 Z "/><text fill="#000000" font-family="sans-serif" font-size="15" lengthAdjust="spacingAndGlyphs" textLength="91.25" x="9220.625" y="1433.197">DepthSensor</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="9185.625" x2="9314.375" y1="1446.25" y2="1446.25"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="36.25" x="9191.875" y="1467.0074">TODO</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="9185.625" x2="9314.375" y1="1475.0287" y2="1475.0287"/><!--MD5=[24dda671bb441dd9073aa5dc4a23468b]
class DepthStereoSensor--><rect fill="#FEFECE" filter="url(#ftkelr2lftzvn)" height="78.7787" id="DepthStereoSensor" style="stroke: #A80036; stroke-width: 1.875;" width="176.25" x="9139.375" y="1672.5"/><ellipse cx="9158.125" cy="1692.5" fill="#ADD1B2" rx="13.75" ry="13.75" style="stroke: #A80036; stroke-width: 1.25;"/><path d="M9157.7344,1700 Q9155.3125,1700 9153.9063,1698.2227 Q9152.5,1696.4258 9152.5,1692.7344 Q9152.5,1689.6094 9153.9844,1687.5 Q9155.4688,1685.3906 9158.0469,1685.3906 Q9158.6133,1685.3906 9159.1602,1685.3906 Q9159.707,1685.3906 9160.0977,1685.3906 Q9160.4102,1685.3906 9160.6055,1685.3906 Q9160.8203,1685.3906 9161.3281,1685.3906 L9162.207,1690 L9160.8789,1690 Q9160.332,1688.6328 9159.6094,1688.0664 Q9158.9063,1687.5 9157.7539,1687.5 Q9156.3086,1687.5 9155.4492,1688.9844 Q9154.6094,1690.4492 9154.6094,1692.7344 Q9154.6094,1695.2539 9155.2539,1696.582 Q9155.918,1697.8906 9157.6758,1697.8906 Q9158.8281,1697.8906 9159.6289,1697.1875 Q9160.4492,1696.4648 9160.8789,1694.7266 L9162.168,1695.3711 Q9161.6797,1697.5586 9160.5078,1698.7891 Q9159.3359,1700 9157.7344,1700 Z "/><text fill="#000000" font-family="sans-serif" font-size="15" lengthAdjust="spacingAndGlyphs" textLength="136.25" x="9175.625" y="1699.447">DepthStereoSensor</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="9140.625" x2="9314.375" y1="1712.5" y2="1712.5"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="36.25" x="9146.875" y="1733.2574">TODO</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="9140.625" x2="9314.375" y1="1741.2787" y2="1741.2787"/><!--MD5=[5b7072e13a0e68289bcad580c90ebf92]
class EventInfomation--><rect fill="#FEFECE" filter="url(#ftkelr2lftzvn)" height="172.6721" id="EventInfomation" style="stroke: #A80036; stroke-width: 1.875;" width="353.75" x="5246.875" y="271.875"/><ellipse cx="5363.4375" cy="291.875" fill="#ADD1B2" rx="13.75" ry="13.75" style="stroke: #A80036; stroke-width: 1.25;"/><path d="M5363.0469,299.375 Q5360.625,299.375 5359.2188,297.5977 Q5357.8125,295.8008 5357.8125,292.1094 Q5357.8125,288.9844 5359.2969,286.875 Q5360.7813,284.7656 5363.3594,284.7656 Q5363.9258,284.7656 5364.4727,284.7656 Q5365.0195,284.7656 5365.4102,284.7656 Q5365.7227,284.7656 5365.918,284.7656 Q5366.1328,284.7656 5366.6406,284.7656 L5367.5195,289.375 L5366.1914,289.375 Q5365.6445,288.0078 5364.9219,287.4414 Q5364.2188,286.875 5363.0664,286.875 Q5361.6211,286.875 5360.7617,288.3594 Q5359.9219,289.8242 5359.9219,292.1094 Q5359.9219,294.6289 5360.5664,295.957 Q5361.2305,297.2656 5362.9883,297.2656 Q5364.1406,297.2656 5364.9414,296.5625 Q5365.7617,295.8398 5366.1914,294.1016 L5367.4805,294.7461 Q5366.9922,296.9336 5365.8203,298.1641 Q5364.6484,299.375 5363.0469,299.375 Z "/><text fill="#000000" font-family="sans-serif" font-size="15" lengthAdjust="spacingAndGlyphs" textLength="110" x="5389.0625" y="298.822">EventInfomation</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="5248.125" x2="5599.375" y1="311.875" y2="311.875"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="130" x="5254.375" y="332.6324">DeviceList removed_;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="115" x="5254.375" y="351.4111">DeviceList added_;</text><line style="stroke: #A80036; stroke-width: 1.875;" x1="5248.125" x2="5599.375" y1="359.4324" y2="359.4324"/><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="338.75" x="5254.375" y="380.1898">EventInfomation(DeviceList removed, DeviceList added);</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="277.5" x="5254.375" y="398.9685">bool wasRemoved(const Device &amp;dev) const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="261.25" x="5254.375" y="417.7472">bool wasAdded(const Device &amp;dev) const;</text><text fill="#000000" font-family="sans-serif" font-size="13.75" lengthAdjust="spacingAndGlyphs" textLength="213.75" x="5254.375" y="436.5259">DeviceList getNewDevices() const;</text><!--MD5=[595702c9d328ef698846e1a536e203c2]
link Context to DeviceHub--><!--MD5=[79beed78e9c67aab7762eb1164caa574]
reverse link Frame to VideoFrame--><path d="M2907.45,381.35 C2781.825,425.725 2506.125,536.625 2331.25,707.5 C2276.75,760.7625 2235.25,837.075 2208.7625,895.5125 " fill="none" id="Frame&lt;-VideoFrame" style="stroke: #A80036; stroke-width: 1.25;"/><polygon fill="none" points="2904.7,373.0375,2931.1875,373.125,2910.425,389.575,2904.7,373.0375" style="stroke: #A80036; stroke-width: 1.25;"/><!--MD5=[44667e16e5e495309fff6bf53d96fe13]
reverse link Frame to Points--><path d="M2947.8375,399.6125 C2885.1,497.0625 2723.65,747.8125 2634.7375,885.9125 " fill="none" id="Frame&lt;-Points" style="stroke: #A80036; stroke-width: 1.25;"/><polygon fill="none" points="2940.675,394.5875,2961.5625,378.3125,2955.3875,404.0625,2940.675,394.5875" style="stroke: #A80036; stroke-width: 1.25;"/><!--MD5=[0ac470a3cdddb72284122ed5519788fc]
reverse link VideoFrame to DepthFrame--><path d="M2175,1093.4 C2175,1199.225 2175,1352.0125 2175,1415.2625 " fill="none" id="VideoFrame&lt;-DepthFrame" style="stroke: #A80036; stroke-width: 1.25;"/><polygon fill="none" points="2166.25,1093.2625,2175,1068.2625,2183.75,1093.2625,2166.25,1093.2625" style="stroke: #A80036; stroke-width: 1.25;"/><!--MD5=[86bed16aaefdfab5eb4d77792a74a7b2]
reverse link DepthFrame to DisparityFrame--><path d="M2175,1501.4125 C2175,1539.925 2175,1592.05 2175,1634.625 " fill="none" id="DepthFrame&lt;-DisparityFrame" style="stroke: #A80036; stroke-width: 1.25;"/><polygon fill="none" points="2166.25,1501.1125,2175,1476.1125,2183.75,1501.1125,2166.25,1501.1125" style="stroke: #A80036; stroke-width: 1.25;"/><!--MD5=[34323467d19fe746bda9534397181647]
reverse link Frame to MotionFrame--><path d="M2973.75,403.3125 C2973.75,516.2875 2973.75,816.175 2973.75,933.05 " fill="none" id="Frame&lt;-MotionFrame" style="stroke: #A80036; stroke-width: 1.25;"/><polygon fill="none" points="2965,403.3125,2973.75,378.3125,2982.5,403.3125,2965,403.3125" style="stroke: #A80036; stroke-width: 1.25;"/><!--MD5=[2dfb0c256b0c354cc05a7ffe6a1bc1bc]
reverse link Frame to FrameSet--><path d="M3002.625,398.9125 C3066.0375,485.7375 3220.1125,696.6875 3324.2125,839.2125 " fill="none" id="Frame&lt;-FrameSet" style="stroke: #A80036; stroke-width: 1.25;"/><polygon fill="none" points="2995.2625,403.6625,2987.575,378.3125,3009.3875,393.3375,2995.2625,403.6625" style="stroke: #A80036; stroke-width: 1.25;"/><!--MD5=[c2dd03d3bd5d0a4fdf119de468083224]
reverse link SeFrameCallback to FramCallback--><path d="M2093.2625,412.375 C2074.725,468.45 2042.4625,558.8125 2005,632.5 C1952.7375,735.3 1877.7375,845.8125 1828.95,914.1 " fill="none" id="SeFrameCallback&lt;-FramCallback" style="stroke: #A80036; stroke-width: 1.25;"/><polygon fill="none" points="2084.9625,409.6,2101,388.525,2101.6125,415,2084.9625,409.6" style="stroke: #A80036; stroke-width: 1.25;"/><!--MD5=[6f2c95c589a5888c891911ed4c59cee9]
reverse link StreamProfile to VideoStreamProfile--><path d="M4799.925,654.65 C4751.625,734.4 4702.5125,815.5 4665.35,876.85 " fill="none" id="StreamProfile&lt;-VideoStreamProfile" style="stroke: #A80036; stroke-width: 1.25;"/><polygon fill="none" points="4792.7375,649.625,4813.175,632.7625,4807.7125,658.6875,4792.7375,649.625" style="stroke: #A80036; stroke-width: 1.25;"/><!--MD5=[5a97996080df6ec7061a3905666b7f1a]
reverse link StreamProfile to MotionStreamProfile--><path d="M5009.9875,657.9625 C5021.1375,764.4625 5032.475,872.8625 5038.7625,932.9625 " fill="none" id="StreamProfile&lt;-MotionStreamProfile" style="stroke: #A80036; stroke-width: 1.25;"/><polygon fill="none" points="5001.25,658.5375,5007.35,632.7625,5018.6625,656.725,5001.25,658.5375" style="stroke: #A80036; stroke-width: 1.25;"/><!--MD5=[14dc4c95329ee8bbc91888f27ab4cf61]
reverse link Pipeline to PipelineConfig--><!--MD5=[6e481b29305ed94d644ef273d0840d84]
reverse link Frame to StreamProfile--><!--MD5=[24d6129feebbae515df01ef9215332bf]
reverse link SeFrameProcessorCallback to FrameProcessorCallback--><path d="M7905,413.6125 C7905,525.2 7905,780.5875 7905,906.9875 " fill="none" id="SeFrameProcessorCallback&lt;-FrameProcessorCallback" style="stroke: #A80036; stroke-width: 1.25;"/><polygon fill="none" points="7896.25,413.5,7905,388.5,7913.75,413.5,7896.25,413.5" style="stroke: #A80036; stroke-width: 1.25;"/><!--MD5=[7809cac847ab0289e1cb31fd54bf729e]
reverse link Options to ProcessingBlock--><path d="M8411.5125,544.8125 C8410.325,642.575 8408.9125,760.1875 8407.85,848.5875 " fill="none" id="Options&lt;-ProcessingBlock" style="stroke: #A80036; stroke-width: 1.25;"/><polygon fill="none" points="8402.7625,544.6625,8411.8125,519.7625,8420.2625,544.875,8402.7625,544.6625" style="stroke: #A80036; stroke-width: 1.25;"/><!--MD5=[d7aab253fa95a57efe82ddef60ff3f05]
reverse link ProcessingBlock to Filter--><path d="M8274.8,1133.8375 C8234.45,1177.8125 8189.0375,1225.0875 8145,1266.25 C8121.7625,1287.975 8096.1875,1310.05 8070.9375,1330.9375 " fill="none" id="ProcessingBlock&lt;-Filter" style="stroke: #A80036; stroke-width: 1.25;"/><polygon fill="none" points="8268.4625,1127.8125,8291.775,1115.225,8281.4,1139.6,8268.4625,1127.8125" style="stroke: #A80036; stroke-width: 1.25;"/><!--MD5=[f08e79372f1e7bb6c99269574c4f46b5]
reverse link FilterInterface to Filter--><path d="M7522.1125,1044.1375 C7551.275,1105.15 7602.0625,1199.2625 7665,1266.25 C7686.75,1289.4 7712,1311.2375 7738.0375,1331.1625 " fill="none" id="FilterInterface&lt;-Filter" style="stroke: #A80036; stroke-width: 1.25;"/><polygon fill="none" points="7514.125,1047.7125,7511.4875,1021.3625,7529.9875,1040.3125,7514.125,1047.7125" style="stroke: #A80036; stroke-width: 1.25;"/><!--MD5=[c4acdd808be272eee767a188b46cbd3f]
reverse link SePlaybackChangedCallback to StatusChangedCallback--><path d="M7101.25,413.6125 C7101.25,525.2 7101.25,780.5875 7101.25,906.9875 " fill="none" id="SePlaybackChangedCallback&lt;-StatusChangedCallback" style="stroke: #A80036; stroke-width: 1.25;"/><polygon fill="none" points="7092.5,413.5,7101.25,388.5,7110,413.5,7092.5,413.5" style="stroke: #A80036; stroke-width: 1.25;"/><!--MD5=[b009946ac3dc9e66751b5abf2403b762]
reverse link Device to Playback--><path d="M6564.275,569.7625 C6517.3375,648.3 6464.6875,736.4125 6420.2125,810.85 " fill="none" id="Device&lt;-Playback" style="stroke: #A80036; stroke-width: 1.25;"/><polygon fill="none" points="6557.0125,564.85,6577.35,547.875,6572.0375,573.825,6557.0125,564.85" style="stroke: #A80036; stroke-width: 1.25;"/><!--MD5=[3fce208fc47166dd6182a59ecdff2b8e]
reverse link Device to Recorder--><path d="M6689.575,573.1875 C6689.325,697.375 6689.025,844.4875 6688.8625,923.5375 " fill="none" id="Device&lt;-Recorder" style="stroke: #A80036; stroke-width: 1.25;"/><polygon fill="none" points="6680.825,572.8625,6689.625,547.875,6698.325,572.9,6680.825,572.8625" style="stroke: #A80036; stroke-width: 1.25;"/><!--MD5=[615f00acb06133c2fc8b8525e24fe30d]
reverse link Options to Sensor--><path d="M8558.9,539.275 C8615.575,609.5125 8681.05,690.6625 8740.275,764.075 " fill="none" id="Options&lt;-Sensor" style="stroke: #A80036; stroke-width: 1.25;"/><polygon fill="none" points="8552.05,544.7125,8543.1625,519.7625,8565.6625,533.725,8552.05,544.7125" style="stroke: #A80036; stroke-width: 1.25;"/><!--MD5=[59c8172e6a274b420a26fc735118a353]
reverse link Sensor to ColorSensor--><path d="M8823.9,1223.2375 C8796.85,1294.5375 8770.2625,1364.625 8754.4875,1406.1875 " fill="none" id="Sensor&lt;-ColorSensor" style="stroke: #A80036; stroke-width: 1.25;"/><polygon fill="none" points="8815.825,1219.8375,8832.875,1199.575,8832.1875,1226.05,8815.825,1219.8375" style="stroke: #A80036; stroke-width: 1.25;"/><!--MD5=[117cb548ab1339f07480838b245b7cc0]
reverse link Sensor to MotionSensor--><path d="M8915,1224.6375 C8915,1295.45 8915,1364.9 8915,1406.1875 " fill="none" id="Sensor&lt;-MotionSensor" style="stroke: #A80036; stroke-width: 1.25;"/><polygon fill="none" points="8906.25,1224.575,8915,1199.575,8923.75,1224.575,8906.25,1224.575" style="stroke: #A80036; stroke-width: 1.25;"/><!--MD5=[3211226b0e8fb1eed09df7d81a714bed]
reverse link Sensor to RoiSensor--><path d="M9002.85,1223.2375 C9028.9375,1294.5375 9054.575,1364.625 9069.775,1406.1875 " fill="none" id="Sensor&lt;-RoiSensor" style="stroke: #A80036; stroke-width: 1.25;"/><polygon fill="none" points="8994.5625,1226.05,8994.1875,1199.575,9011,1220.0375,8994.5625,1226.05" style="stroke: #A80036; stroke-width: 1.25;"/><!--MD5=[b39ab66bb0c29ac81ccabd4bd2b6e3f5]
reverse link Sensor to DepthSensor--><path d="M9087.0375,1219.9875 C9139.625,1292.4 9191.625,1364 9222.2625,1406.1875 " fill="none" id="Sensor&lt;-DepthSensor" style="stroke: #A80036; stroke-width: 1.25;"/><polygon fill="none" points="9079.8125,1224.9375,9072.2,1199.575,9093.975,1214.65,9079.8125,1224.9375" style="stroke: #A80036; stroke-width: 1.25;"/><!--MD5=[0f3ae7036f843518cd7c5d06e63ae462]
reverse link DepthSensor to DepthStereoSensor--><path d="M9244.5875,1510.3875 C9240.275,1560.875 9234.3875,1629.825 9230.775,1672.225 " fill="none" id="DepthSensor&lt;-DepthStereoSensor" style="stroke: #A80036; stroke-width: 1.25;"/><polygon fill="none" points="9235.8875,1509.3875,9246.725,1485.225,9253.325,1510.875,9235.8875,1509.3875" style="stroke: #A80036; stroke-width: 1.25;"/><!--MD5=[30c6a0e30216b7e388950b10fde848de]
@startuml

class EventInfomation {
  EventInfomation(DeviceList removed, DeviceList added);
  bool wasRemoved(const Device &dev) const;
  bool wasAdded(const Device &dev) const;
  DeviceList getNewDevices() const;

  DeviceList removed_;
  DeviceList added_;
}

together {
interface DevicesChangedCallback <<T>> {
    explicit DevicesChangedCallback(T callback);
    void onDevicesChanged(SeDeviceList *removed, SeDeviceList *added) override;
    void release() override;

    T callback_;
}

class Context {
    Context();
    explicit Context(std::shared_ptr<SeContext> context);
    explicit operator std::shared_ptr<SeContext>() const;

    DeviceList queryDevices() const;
    DeviceList queryDevices(int mask) const;
    std::vector<Sensor> queryAllSensors() const;
    Device getSensorParent(const Sensor &sensor) const;

    void setDevicesCahngedCallback(T callback);

    std::shared_ptr<SeContext> context_;
}

class DeviceHub {
    explicit DeviceHub(const Context &context);
    explicit operator std::shared_ptr<SeDeviceHub>() { return device_hub_; }
    explicit DeviceHub(std::shared_ptr<SeDeviceHub> hub) : device_hub_(std::move(hub)) {}
    Device waitForDevice() const;
    bool isConnected(const Device &dev) const;

    std::shared_ptr<SeDeviceHub> device_hub_;
}

Context -[hidden]> DeviceHub
}

together {
class Playback
class Recorder
class Device {
  Device();
  explicit Device(std::shared_ptr<SeDevice> dev);

  explicit operator std::shared_ptr<SeDevice>() const;
  explicit operator bool() const;
  Device &operator=(std::shared_ptr<SeDevice> dev);
  Device &operator=(const Device &dev);

  std::vector<Sensor> querySensors() const;
  bool supports(CameraInfo info) const;
  std::string getInfo(CameraInfo info) const;
  void hardwareReset();
  T first() const;
  bool is() const;
  T as() const;
  const std::shared_ptr<SeDevice> &get() const;

  std::shared_ptr<SeDevice> device_;
}

hide device_list_iterator
    class device_list_iterator   {
        device_list_iterator(const device_list& device_list, uint32_t uint32_t)
        device operator*() const
        bool operator!=(const device_list_iterator& other) const
        bool operator==(const device_list_iterator& other) const
        device_list_iterator& operator++()
        const device_list& _list;
        uint32_t _index;
    }

class DeviceList {
    explicit DeviceList(std::shared_ptr<SeDeviceList> list);
    DeviceList();
    explicit operator std::vector<Device>() const;
    DeviceList &operator=(std::shared_ptr<SeDeviceList> list);
    Device operator[](uint32_t index) const;
    bool contains(const Device &dev) const;
    int32_t size() const;
    Device front() const;
    Device back() const;
    explicit operator std::shared_ptr<SeDeviceList>();
    device_list_iterator begin() const;
    device_list_iterator end() const;
    const SeDeviceList *getList() const;

    std::shared_ptr<SeDeviceList> list_;
}

}

together {

hide Frame member
class Frame {
    Frame();
    explicit Frame(SeFrame *ref);
    Frame(const Frame &other);
    Frame(Frame &&other) noexcept;
    Frame &operator=(Frame other);
    explicit operator bool() const;
    explicit operator SeFrame *();
    void swap(Frame &other);
    void keep();
    SeSensor *getSensor() const;
    StreamProfile getProfile() const;
    double timestamp() const;
    int64_t getFrameMetadata(FrameMetadataValue frame_metadata) const;
    bool supportsFrameMetadata(FrameMetadataValue frame_metadata) const;
    int64_t getFrameIndex() const;
    size_t dataSize() const;
    const char *data() const;
    bool is() const;
    T as() const;
    SeFrame *get() const;
    void addRef() const;
    void reset();

    SeFrame *frame_ref_;
    StreamProfile profile_;
    uint64_t frame_index_ = 0;
}

Frame <|- - VideoFrame
class VideoFrame{
    explicit VideoFrame(const Frame &frame);
    int width() const;
    int height() const;
    int strideInBytes() const;
    int bitsPerPixel() const;
    int bytesPerPixel() const;
}


Frame <|- - Points
class Points {
    explicit Points();
    explicit Points(const Frame &frame);
    const Vertex *vertices() const;
    const TextureCoordinate *textureCoordinate() const;
    void exportToPly(const std::string &fnmae, VideoFrame texture) const;
    size_t size() consta

    size_t size_;
}

VideoFrame <|- - DepthFrame
class DisparityFrame {
    explicit DepthFrame(const Frame &frame);
    float distance(int x, int y) const;
    float units() const;
}

DepthFrame <|- - DisparityFrame
class DisparityFrame {
    explicit DisparityFrame(const Frame &frame);
    float baseline() const;
}

Frame <|- - MotionFrame
class MotionFrame {
    explicit MotionFrame(const Frame &frame);
    SeVector3f getMotionData() const;
}


Frame <|- - FrameSet
class FrameSet {
    FrameSet();
    explicit FrameSet(const Frame &frame);
    Frame operator[](size_t index) const;
    VideoFrame operator[](FrameId frame_id) const;
    Frame firstOrDefault(FrameId frame_id, FrameFormat format = FrameFormat::Any) const;
    Frame first(FrameId frame_id, FrameFormat format = FrameFormat::Any) const;
    VideoFrame getVideoFrame(FrameId frame_id) const;
    DepthFrame getDepthFrame() const;
    size_t size() const;
    iterator begin() const;
    iterator end() const;

    size_t size_;
}

SeFrameCallback <|- - FramCallback
class FramCallback {
  T on_frame_function_;

  explicit FramCallback(T on_frame) : on_frame_function_(on_frame) {}
  void onFrame(SeFrame *frame) override {}
  void release() override { delete this; }
}

class FrameQueue {
  explicit FrameQueue(uint32_t capacity, bool keep_frames = false);
  FrameQueue();
  void operator()(Frame frame);
  void enqueue(Frame frame);
  Frame waitForFrame(int32_t timeout_ms = 5000) const;
  bool pollForFrame(T *output) const;
  bool tryWaitForFrame(T *output, uint32_t timeout_ms = 5000) const;

  size_t capacity() const { return capacity_; }
  bool keepFrames() const { return keep_; }

  std::shared_ptr<SeFrameQueue> queue_;
  size_t capacity_;
  bool keep_;
}

}

together {
class StreamProfile {
  StreamProfile();
  explicit StreamProfile(SeStreamProfile *profile);
  explicit operator const SeStreamProfile *();
  explicit operator bool() const;
  bool operator==(const StreamProfile &rhs) const;
  const SeStreamProfile *get() const;
  int32_t index() const;
  int32_t uniqueId() const;
  FrameId frameId() const;
  FrameFormat format() const;
  uint32_t fps() const;
  void setIndex(int32_t index);
  void setUniqueId(int32_t uid);
  void setFrameId(FrameId frame_id);
  void setFormat(FrameFormat format);
  void setFrameRate(uint32_t fps);
  Extrinsics getExtrinsicsTo(const StreamProfile &to) const;
  void registerExtrinsicsTo(const StreamProfile &to, Extrinsics extrinsics);
  bool is() const;
  T as() const;

  std::shared_ptr<SeStreamProfile> profile_;
  int index_ = 0;
  int uid_ = 0;
  int frame_rete_ = 0;
  FrameFormat format_ = FrameFormat::Any;
  FrameId frame_id_ = FrameId::NotUsed;
}

StreamProfile <|- - VideoStreamProfile
class VideoStreamProfile {
  explicit VideoStreamProfile(const StreamProfile &sp);
  StreamProfile clone(FrameId frame_id, int32_t index, FrameFormat format,
                      int width, int height, const Intrinsics &intr) const;
  int width() const;
  int height() const;
  Intrinsics getIntrinsics() const;

  int width_;
  int height_;
}

StreamProfile <|- - MotionStreamProfile
class MotionStreamProfile {
  explicit MotionStreamProfile(const StreamProfile &sp);
  MotionDeviceIntrinsics getMotionIntrinsics() const;
}

class PipelineProfile {
  PipelineProfile();
  explicit PipelineProfile(std::shared_ptr<SePipelineProfile> profile);
  explicit operator bool() const;
  explicit operator std::shared_ptr<SePipelineProfile>();
  std::vector<StreamProfile> getStreams() const;
  StreamProfile getStream(FrameId frame_id, int index = -1) const;
  Device getDevice() const;

  std::shared_ptr<SePipelineProfile> pipeline_profile_;
}

class PipelineConfig {
  PipelineConfig();
  void enableStream(FrameId frame_id,
                    int index,
                    uint32_t width,
                    uint32_t height,
                    FrameFormat format,
                    uint32_t framerate);
  void enableStream(FrameId frame_id,
                    int width,
                    int height,
                    FrameFormat format = FrameFormat::Any,
                    int framerate = 0);
  void enableStream(FrameId frame_id, int stream_index = -1);
  void enableStream(FrameId frame_id, FrameFormat format, int framerate = 0);
  void enableStream(FrameId frame_id, int stream_index, FrameFormat format, int framerate = 0);
  void enableAllStreams();
  void enableDevice(const std::string &serial);
  void enableDeviceFromFile(const std::string &file, bool repeat_playback);
  void disableStream(FrameId frame_id, int index = -1);
  void disableAllStreams();
  PipelineProfile resolve(std::shared_ptr<SePipeline> pipeline) const;
  bool canResolve(std::shared_ptr<SePipeline> pipeline) const;
  std::shared_ptr<SePipelineConfig> get() const;
  explicit operator std::shared_ptr<SePipelineConfig>() const;

  std::shared_ptr<SePipelineConfig> config_;
}

class Pipeline {
  explicit Pipeline(const Context& context = Context());
  PipelineProfile start();
  PipelineProfile start(const PipelineConfig &config);
  PipelineProfile start(T callback);
  PipelineProfile start(const PipelineConfig &config, T callback);
  void stop();
  FrameSet waitForFrames(uint32_t timeout_ms = 15000) const;
  bool pollForFrames(FrameSet *frame_set) const;
  bool tryWaitForFrames(FrameSet *frame_set, uint32_t timeout_ms = 15000) const;
  PipelineProfile getActiveProfile();
  operator std::shared_ptr<SePipeline>() const;
  explicit Pipeline(std::shared_ptr<SePipeline> pipeline);

  std::shared_ptr<SePipeline> pipeline_;
}

Pipeline <-[hidden]up- PipelineConfig
Frame <-[hidden]left- - StreamProfile
}




together {
class Options {
  bool supports(OptionKey option) const;
  std::string getOptionDescription(OptionKey option) const;
  std::string getOptionName(OptionKey option) const;
  std::string getOptionValueDescription(OptionKey option, float val) const;
  float getOption(OptionKey option) const;
  OptionRange getOptionRange(OptionKey option) const;
  void setOption(OptionKey option, float value) const;
  bool isOptionReadonly(OptionKey option) const;
  std::vector<OptionKey> getSupportedOptions() const;
  Options &operator=(const Options &other);
  Options(const Options &other) : options_(other.options_) {}
  explicit Options(SeOptions *opt = nullptr) : options_(opt) {}
  Options &operator=(const T &dev);

  SeOptions *options_;
}

SeFrameProcessorCallback <|- - FrameProcessorCallback
class FrameProcessorCallback <<T>> {
    explicit FrameProcessorCallback(T on_frame);
    void onFrame(SeFrame *frame, SeSyntheticSource *source) override;
    void release() override;
    T on_frame_function_;
}

class FilterInterface {
    virtual Frame process(Frame frame) const = 0;
}

Options <|- - ProcessingBlock
class ProcessingBlock {
    explicit ProcessingBlock(const std::shared_ptr<SeProcessingBlock> &block);
    explicit ProcessingBlock(S processing_func);
    explicit operator SeOptions *() const;
    virtual SeProcessingBlock *get() const;
    void start(S on_frame) {}
    S &operator>>(S &on_frame) {}
    void invoke(Frame frame) const;
    bool support(CameraInfo info) const;
    std::string getInfo(CameraInfo info) const;
    void registerSimpleOption(OptionKey option_key, OptionRange range);

    std::shared_ptr<SeProcessingBlock> block_;
}

ProcessingBlock <|- - Filter
FilterInterface <|- - Filter
class Filter {
    explicit Filter(const std::shared_ptr<SeProcessingBlock> &block, uint32_t queue_size = 1);
    explicit Filter(S processing_func, uint32_t queue_size = 1);
    Frame process(Frame frame) const override;
    FrameQueue getQueue() const;
    SeProcessingBlock *get() const override
    bool is<<T>>() const
    T as<<T>>() const
    operator bool() const

    FrameQueue queue_;
}

SePlaybackChangedCallback <|- - StatusChangedCallback
class StatusChangedCallback<<T>>  {
    T on_status_changed_function_;
    explicit StatusChangedCallback(T on_status_changed)
    void onPlaybackStatusChanged(PlaybackStatus status) override
    void release() override 
}

Device <|- - Playback
class Playback {
    explicit Playback(Device device) {}
    void pause();
    void resume();
    void stop();
    void seek();
    std::string fileName() const;
    uint64_t position() const;
    std::chrono::nanoseconds duration() const;
    bool isRealTime() const;
    void setRealTime(bool is_real_time);
    void setPlaybackSpeed(float speed);
    void setStatusChangedCallback();
    PlaybackStatus currentStatus() const;
    explicit Playback(std::shared_ptr<SeDevice> dev);

    std::string file_;
}

Device <|- - Recorder
class Recorder  {
    explicit Recorder(const Device& device);
    Recorder(const std::string &file, const Device& dev);
    explicit Recorder(std::shared_ptr<SeDevice> dev)
}

}

together {
Options <|- - Sensor
class Sensor  {
    Sensor() : sensor_(nullptr);
    explicit Sensor(const std::shared_ptr<SeSensor> &dev);
    explicit operator std::shared_ptr<SeSensor>();
    Sensor &operator=(const std::shared_ptr<SeSensor> &other);
    Sensor &operator=(const Sensor &other);
    explicit operator bool() const;
    const std::shared_ptr<SeSensor> &get() const;
    bool is<<T>>() const
    T as<<T>>() const
    bool supports(CameraInfo info) const;
    std::string getInfo(CameraInfo info) const;
    void open(const StreamProfile &profile) const;
    void open(const std::vector<StreamProfile> &profiles) const;
    void close() const;
    void setNotificationCallback(T callback) const;
    void start(T callback) const;
    void stop() const;
    std::vector<StreamProfile> getStreamProfiles() const;
    std::vector<StreamProfile> getActiveStreams() const;
    std::shared_ptr<SeSensor> sensor_;
}

Sensor <|- - ColorSensor
class ColorSensor  {
    TODO
}

Sensor <|- - MotionSensor
class MotionSensor  {
    TODO
}

Sensor <|- - RoiSensor
class RoiSensor  {
    TODO
}

Sensor <|- - DepthSensor
class DepthSensor  {
    TODO
}

DepthSensor <|- - DepthStereoSensor
class DepthStereoSensor  {
    TODO
}

}

@enduml

PlantUML version 1.2020.09(Sun May 10 18:51:06 CST 2020)
(GPL source distribution)
Java Runtime: OpenJDK Runtime Environment
JVM: OpenJDK 64-Bit Server VM
Java Version: 11.0.7+10-b765.65
Operating System: Windows 10
Default Encoding: GBK
Language: zh
Country: CN
--></g></svg>